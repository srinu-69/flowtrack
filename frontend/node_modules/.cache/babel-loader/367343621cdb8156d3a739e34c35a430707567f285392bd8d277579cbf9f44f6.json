{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hussa\\\\Desktop\\\\ticketing\\\\flowtrack\\\\frontend\\\\src\\\\components\\\\users\\\\Users.js\",\n  _s = $RefreshSig$();\n// full code before changes\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import {\n//   FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch, FiUpload,\n//   FiPlus, FiMinus\n// } from 'react-icons/fi';\n\n// const ROLES_KEY = 'user-management-roles';\n// const DEPARTMENTS_KEY = 'user-management-departments';\n\n// const defaultRoles = ['Assosiate Developer', 'Senior Assosiate Developer', 'HR', 'Administration'];\n// const defaultDepartments = ['Frontend', 'Backend', 'Middleware', 'AI/ML','DevOps','Testing','FlowTrack','NetWork','Hr'];\n\n// function getStored(key, fallback) {\n//   const saved = localStorage.getItem(key);\n//   try {\n//     return saved ? JSON.parse(saved) : fallback;\n//   } catch {\n//     return fallback;\n//   }\n// }\n// function setStored(key, value) {\n//   localStorage.setItem(key, JSON.stringify(value));\n// }\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     role: 'Developer',\n//     department: 'Engineering',\n//     active: true,\n//     mobileNumber: '',\n//     passwordResetNeeded: false,\n//     profileFile: null,\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({});\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [error, setError] = useState(null);\n\n//   // Roles & Departments state\n//   const [roles, setRoles] = useState(() => getStored(ROLES_KEY, defaultRoles));\n//   const [departments, setDepartments] = useState(() => getStored(DEPARTMENTS_KEY, defaultDepartments));\n\n//   // Modal state\n//   const [showRoleModal, setShowRoleModal] = useState(false);\n//   const [showDepartmentModal, setShowDepartmentModal] = useState(false);\n//   const [roleInput, setRoleInput] = useState('');\n//   const [departmentInput, setDepartmentInput] = useState('');\n//   const [roleToDelete, setRoleToDelete] = useState('');\n//   const [departmentToDelete, setDepartmentToDelete] = useState('');\n\n//   // Load users on mount\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         setUsers(data);\n//       } catch (err) {\n//         console.error('Failed to load users:', err);\n//         setError('Failed to load users');\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   // Save roles and departments to localStorage if changed\n//   useEffect(() => { setStored(ROLES_KEY, roles); }, [roles]);\n//   useEffect(() => { setStored(DEPARTMENTS_KEY, departments); }, [departments]);\n\n//   // Handlers\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setEditForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const create = async () => {\n//     if (!newUserForm.firstName.trim() || !newUserForm.lastName.trim() || !newUserForm.email.trim()) {\n//       setError('First Name, Email are required.');\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: `${newUserForm.firstName.trim()} ${newUserForm.lastName.trim()}`,\n//         profileFile: newUserForm.profileFile\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n//           : null\n//       };\n//       await addUser(newUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setNewUserForm(defaultNewUser);\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to add user:', err);\n//       setError('Failed to add user');\n//     }\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ ...u });\n//     setError(null);\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({});\n//     setError(null);\n//   };\n\n//   const saveEdit = async (id) => {\n//     if (!editForm.firstName.trim() || !editForm.lastName.trim() || !editForm.email.trim()) {\n//       setError('Full Name, and Email cannot be empty.');\n//       return;\n//     }\n//     try {\n//       const updatedUser = {\n//         ...editForm,\n//         name: `${editForm.firstName.trim()} ${editForm.lastName.trim()}`,\n//         profileFile: editForm.profileFile && editForm.profileFile.name\n//           ? { name: editForm.profileFile.name, size: editForm.profileFile.size }\n//           : editForm.profileFile\n//       };\n//       await updateUser(updatedUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       cancelEdit();\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to update user:', err);\n//       setError('User not found or failed to update');\n//     }\n//   };\n\n//   const remove = async (id) => {\n//     try {\n//       await deleteUser(id);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to delete user:', err);\n//       setError('User not found or failed to delete');\n//     }\n//   };\n\n//   const filteredUsers = users.filter(user => {\n//     const searchLower = searchTerm.toLowerCase();\n//     return (\n//       (user.name && user.name.toLowerCase().includes(searchLower)) ||\n//       (user.firstName && user.firstName.toLowerCase().includes(searchLower)) ||\n//       (user.lastName && user.lastName.toLowerCase().includes(searchLower)) ||\n//       (user.email && user.email.toLowerCase().includes(searchLower)) ||\n//       (user.role && user.role.toLowerCase().includes(searchLower)) ||\n//       (user.department && user.department.toLowerCase().includes(searchLower))\n//     );\n//   });\n\n//   const getRoleColor = (roleOrDepartment) => {\n//     const colors = {\n//       'admin': 'role-admin',\n//       'manager': 'role-manager',\n//       'developer': 'role-developer',\n//       'reporter': 'role-reporter',\n//       'engineering': 'role-developer',\n//       'sales': 'role-sales',\n//       'hr': 'role-hr',\n//       'marketing': 'role-marketing',\n\n//     };\n//     return colors[roleOrDepartment.toLowerCase()] || '';\n//   };\n\n//   // ---- Modal handlers ----\n//   // Role modals\n//   const openRoleModal = () => { setShowRoleModal(true); setRoleInput(''); setRoleToDelete(''); };\n//   const closeRoleModal = () => { setShowRoleModal(false); setRoleInput(''); setRoleToDelete(''); };\n\n//   const addRole = () => {\n//     const v = roleInput.trim();\n//     if (v && !roles.includes(v)) {\n//       setRoles([...roles, v]);\n//       setRoleInput('');\n//     }\n//   };\n//   const deleteRole = (r) => {\n//     setRoles(roles.filter(role => role !== r));\n//     // Optionally, update forms if current value is deleted\n//     if (newUserForm.role === r) setNewUserForm(prev => ({ ...prev, role: roles[0] || '' }));\n//     if (editForm.role === r) setEditForm(prev => ({ ...prev, role: roles[0] || '' }));\n//     setRoleToDelete('');\n//   };\n\n//   // Department modals\n//   const openDepartmentModal = () => { setShowDepartmentModal(true); setDepartmentInput(''); setDepartmentToDelete(''); };\n//   const closeDepartmentModal = () => { setShowDepartmentModal(false); setDepartmentInput(''); setDepartmentToDelete(''); };\n\n//   const addDepartment = () => {\n//     const v = departmentInput.trim();\n//     if (v && !departments.includes(v)) {\n//       setDepartments([...departments, v]);\n//       setDepartmentInput('');\n//     }\n//   };\n//   const deleteDepartment = (d) => {\n//     setDepartments(departments.filter(dep => dep !== d));\n//     if (newUserForm.department === d)\n//       setNewUserForm(prev => ({ ...prev, department: departments[0] || '' }));\n//     if (editForm.department === d)\n//       setEditForm(prev => ({ ...prev, department: departments[0] || '' }));\n//     setDepartmentToDelete('');\n//   };\n\n//   return (\n//     <div className=\"users-container\">\n//       <style jsx global>{`\n//         body { background: #D8F7FA; min-height: 100vh; }\n//       `}</style>\n//       {/* Header */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management System 🧑‍💼</h1>\n//         <p className=\"users-subtitle\">Manage your team members, roles, and administrative settings.</p>\n//         {error && <p className=\"error-message\">{error}</p>}\n//       </div>\n//       <div className=\"users-grid\">\n//         {/* ---- FORM SECTION ---- */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" /> Add New User\n//             </h2>\n//           </div>\n//           <div className=\"form-grid-expanded\">\n//             {/* Standard fields */}\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name *</label>\n//               <input className=\"modern-input\" name=\"firstName\"\n//                 value={newUserForm.firstName}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"First Name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address *</label>\n//               <input className=\"modern-input\" name=\"email\"\n//                 value={newUserForm.email}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Email Address\"\n//                 type=\"email\"\n//               />\n//             </div>\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Mobile Number</label>\n//               <input className=\"modern-input\" name=\"mobileNumber\"\n//                 value={newUserForm.mobileNumber}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Mobile Number\"\n//                 type=\"tel\"\n//               />\n//             </div>\n//             {/* Role dropdown with add/delete buttons */}\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\n//               <label className=\"input-label\">Role\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\n//                   onClick={openRoleModal} title=\"Edit roles\" />\n//               </label>\n//               <select className=\"modern-select\" name=\"role\"\n//                 value={newUserForm.role}\n//                 onChange={handleNewUserChange}>\n//                 {roles.map(r => (\n//                   <option key={r}>{r}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             {/* Department dropdown with add/delete buttons */}\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\n//               <label className=\"input-label\">Department\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\n//                   onClick={openDepartmentModal} title=\"Edit departments\" />\n//               </label>\n//               <select className=\"modern-select\" name=\"department\"\n//                 value={newUserForm.department}\n//                 onChange={handleNewUserChange}>\n//                 {departments.map(d => (\n//                   <option key={d}>{d}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Date of Birth</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"dob\"\n//                 type=\"date\"\n//                 value={newUserForm.dob}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n\n//             {/* <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">User Status</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"active\"\n//                   checked={newUserForm.active}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">{newUserForm.active ? 'Active' : 'Inactive'}</span>\n//               </label>\n//             </div> */}\n//             <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">Password Reset</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"passwordResetNeeded\"\n//                   checked={newUserForm.passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">Reset on next login</span>\n//               </label>\n//             </div>\n//           </div>\n//           {/* <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button> */}\n//         </div>\n//         {/* ---- LIST SECTION ---- */}\n//         {/* <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">\n//               Team Members ({filteredUsers.length})\n//             </h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Department</th>\n//                   <th>Role</th>\n//                   <th>Active</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input className=\"edit-input\" name=\"firstName\"\n//                             value={editForm.firstName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"First Name\"\n//                           />\n//                           <input className=\"edit-input\"\n//                             name=\"lastName\"\n//                             value={editForm.lastName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"Last Name\"\n//                             style={{ marginTop: '5px' }}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input className=\"edit-input\" name=\"email\"\n//                             value={editForm.email || ''}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n//                             <select className=\"edit-select\"\n//                               name=\"department\"\n//                               value={editForm.department || defaultNewUser.department}\n//                               onChange={handleEditChange}>\n//                               {departments.map(d => (\n//                                 <option key={d}>{d}</option>\n//                               ))}\n//                             </select>\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\n//                               onClick={openDepartmentModal} title=\"Edit departments\" />\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n//                             <select className=\"edit-select\"\n//                               name=\"role\"\n//                               value={editForm.role || defaultNewUser.role}\n//                               onChange={handleEditChange}>\n//                               {roles.map(r => (\n//                                 <option key={r}>{r}</option>\n//                               ))}\n//                             </select>\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\n//                               onClick={openRoleModal} title=\"Edit roles\" />\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <input type=\"checkbox\"\n//                             name=\"active\"\n//                             checked={editForm.active || false}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.firstName ? u.firstName.charAt(0) : (u.name ? u.name.charAt(0) : 'U')}</div>\n//                             <span>{u.firstName || u.name} {u.lastName}</span>\n//                             <div className=\"file-indicator\" title={u.profileFile ? `File: ${u.profileFile.name}` : 'No file'}>\n//                               {u.profileFile && '📁'}\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.department || 'engineering')}`}>\n//                             {u.department}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.role || 'developer')}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <span className={`status-dot ${u.active ? 'status-active' : 'status-inactive'}`}></span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div> */}\n//       </div>\n//       {/* ------ MODALS ------ */}\n//       {showRoleModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <h3>Edit Roles</h3>\n//             <div style={{ marginBottom: 12 }}>\n//               <input type=\"text\"\n//                 placeholder=\"Add new role\"\n//                 className=\"modern-input\"\n//                 value={roleInput}\n//                 onChange={e => setRoleInput(e.target.value)}\n//                 onKeyDown={e => e.key === 'Enter' && addRole()}\n//               />\n//               <button onClick={addRole} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\n//             </div>\n//             <div>\n//               {roles.map(r => (\n//                 <div key={r} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\n//                   <span>{r}</span>\n//                   <FiMinus style={{ cursor: 'pointer', color: '#e53e3e' }}\n//                     title=\"Delete role\"\n//                     onClick={() => setRoleToDelete(r)}\n//                   />\n//                   {roleToDelete === r && (\n//                     <span style={{ marginLeft: 6 }}>\n//                       Delete?\n//                       <button className=\"btn-delete\" onClick={() => deleteRole(r)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setRoleToDelete('')}>No</button>\n//                     </span>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeRoleModal}>Close</button>\n//           </div>\n//         </div>\n//       )}\n//       {showDepartmentModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <h3>Edit Departments</h3>\n//             <div style={{ marginBottom: 12 }}>\n//               <input type=\"text\"\n//                 placeholder=\"Add new department\"\n//                 className=\"modern-input\"\n//                 value={departmentInput}\n//                 onChange={e => setDepartmentInput(e.target.value)}\n//                 onKeyDown={e => e.key === 'Enter' && addDepartment()}\n//               />\n//               <button onClick={addDepartment} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\n//             </div>\n//             <div>\n//               {departments.map(d => (\n//                 <div key={d} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\n//                   <span>{d}</span>\n//                   <FiMinus\n//                     style={{ cursor: 'pointer', color: '#e53e3e' }}\n//                     title=\"Delete department\"\n//                     onClick={() => setDepartmentToDelete(d)}\n//                   />\n//                   {departmentToDelete === d && (\n//                     <span style={{ marginLeft: 6 }}>\n//                       Delete?\n//                       <button className=\"btn-delete\" onClick={() => deleteDepartment(d)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setDepartmentToDelete('')}>No</button>\n//                     </span>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeDepartmentModal}>Close</button>\n//           </div>\n//         </div>\n//       )}\n//       {/* --- Modal Styles --- */}\n//   <style jsx>{`\n//     .modal-overlay {\n//       position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n//       background: rgba(0,0,0,.15);\n//       z-index: 1100;\n//       display: flex;\n//       justify-content: center;\n//       align-items: center;\n//     }\n//     .modal-content {\n//       background: #fff;\n//       border-radius: 12px;\n//       padding: 30px 35px;\n//       box-shadow: 0 8px 32px rgba(0,0,0,.15);\n//       min-width: 350px;\n//       max-width: 95vw;\n//       font-size: 1.03rem;\n//       color: #2d3748;\n//     }\n//     .modal-content h3 { margin-top:0; font-size:1.18em; margin-bottom:0.9em; }\n//     .modal-content input { margin-bottom:6px; }\n\n//     .users-container {\n//       min-height: 100vh;\n//       background: #D8F7FA;\n//       padding: 20px;\n//     }\n//     /* ... (rest of your unchanged styles remain here) ... */\n//     .users-header {\n//       text-align: center;\n//       margin-bottom: 40px;\n//       color: #2d3748;\n//     }\n//     .users-title {\n//       font-size: 2.5rem;\n//       font-weight: 700;\n//       margin-bottom: 8px;\n//     }\n//     .users-subtitle {\n//       font-size: 1.1rem;\n//       opacity: 0.8;\n//       color: #4a5568;\n//     }\n//     .error-message {\n//         color: #e53e3e;\n//         background: #fed7d7;\n//         padding: 8px 15px;\n//         border-radius: 8px;\n//         margin-top: 15px;\n//         display: inline-block;\n//         font-weight: 500;\n//     }\n//     .users-grid {\n//       display: grid;\n//       grid-template-columns: 1fr;\n//       gap: 30px;\n//       max-width: 1400px;\n//       margin: 0 auto;\n//     }\n//     @media (min-width: 1024px) {\n//       .users-grid {\n//         grid-template-columns: 450px 1fr;\n//       }\n//     }\n//     .glassmorphism {\n//       background: rgba(255, 255, 255, 0.95);\n\n//       backdrop-filter: blur(10px);\n//       border-radius: 20px;\n//       border: 1px solid rgba(255, 255, 255, 0.2);\n//       box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05);\n//     }\n//     .users-form-card,\n//     .users-list-card {\n//       padding: 30px;\n//     }\n//     .card-header {\n//       display: flex;\n//       justify-content: space-between;\n//       align-items: center;\n//       margin-bottom: 30px;\n//       flex-wrap: wrap;\n//       gap: 15px;\n//     }\n//     .card-title {\n//       font-size: 1.5rem;\n//       font-weight: 600;\n//       color: #2d3748;\n//       display: flex;\n//       align-items: center;\n//     }\n//     .icon-spacing {\n//       margin-right: 10px;\n//     }\n//     .form-grid-expanded {\n//       display: grid;\n//       grid-template-columns: 1fr 1fr;\n//       gap: 20px;\n//       margin-bottom: 30px;\n//     }\n//     .input-group {\n//       display: flex;\n//       flex-direction: column;\n//     }\n//     .input-label {\n//       font-weight: 500;\n//       margin-bottom: 8px;\n//       color: #4a5568;\n//     }\n//     .checkbox-group {\n//         grid-column: span 1;\n//     }\n//     .checkbox-label {\n//         display: flex;\n//         align-items: center;\n//         font-weight: 400;\n//         color: #4a5568;\n//         cursor: pointer;\n//         padding: 10px;\n//         border-radius: 8px;\n//     }\n//     .checkbox-label input[type=\"checkbox\"] {\n//         margin-right: 10px;\n//         width: 18px;\n//         height: 18px;\n//         accent-color: #667eea;\n//     }\n//     .file-group input[type=\"file\"] {\n//       display: none;\n//     }\n//     .file-upload-btn {\n//       padding: 12px 16px;\n//       border: 2px solid #667eea;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       font-weight: 500;\n//       color: #667eea;\n//       background: #ebf4ff;\n//       cursor: pointer;\n//       transition: background-color 0.2s;\n//       display: flex;\n//       align-items: center;\n//       justify-content: flex-start;\n//     }\n//     .file-upload-btn:hover {\n//       background: #d4e3ff;\n//     }\n//     .file-upload-btn .btn-icon {\n//       margin-right: 8px;\n//       font-size: 1.2rem;\n//     }\n//     .modern-input,\n//     .modern-select {\n//       padding: 12px 16px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       transition: all 0.3s ease;\n//       // background: #D8F7FA;\n//       width: 100%;\n//       box-sizing: border-box;\n//     }\n//     .modern-input:focus,\n//     .modern-select:focus {\n//       outline: none;\n//       border-color: #667eea;\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//     }\n//     .create-btn {\n//       grid-column: 1 / -1;\n//       width: 100%;\n//       padding: 14px;\n//       background: #4e54c8;\n//       color: white;\n//       border: none;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       font-weight: 600;\n//       cursor: pointer;\n//       transition: transform 0.2s ease;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//     }\n//     .create-btn:hover {\n//       transform: translateY(-2px);\n//       box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//     }\n//     .btn-icon {\n//       margin-right: 8px;\n//     }\n//     .search-container {\n//       position: relative;\n//       min-width: 250px;\n//     }\n//     .search-input {\n//       padding: 12px 16px 12px 40px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       width: 100%;\n//       transition: all 0.3s ease;\n//     }\n//     .search-input:focus {\n//       outline: none;\n//       border-color: #667eea;\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//     }\n//     .search-icon {\n//       position: absolute;\n//       left: 12px;\n//       top: 50%;\n//       transform: translateY(-50%);\n//       color: #a0aec0;\n//     }\n//     .table-container {\n//       border-radius: 10px;\n//       /* Removed overflow-x to prevent horizontal scroll */\n//     }\n//     .modern-table {\n//       width: 100%;\n//       border-collapse: collapse;\n//       table-layout: auto; /* Changed from fixed or default to auto */\n//       /* Removed min-width */\n//     }\n//     .modern-table th {\n//       background: #f7fafc;\n//       padding: 12px 8px; /* Slightly reduce padding for smaller widths */\n//       text-align: left;\n//       font-weight: 600;\n//       color: #4a5568;\n//       border-bottom: 2px solid #e2e8f0;\n//       word-wrap: break-word;\n//     }\n//     .modern-table td {\n//       padding: 12px 8px; /* Adjust padding */\n//       border-bottom: 1px solid #e2e8f0;\n//       vertical-align: middle;\n//       word-wrap: break-word;\n//       white-space: normal;\n//     }\n//     .modern-table tr:hover {\n//       background: #D8F7FA;\n//     }\n//     .editing-row {\n//       background: #fff9e6 !important;\n//     }\n//     .user-info {\n//       display: flex;\n//       align-items: center;\n//       gap: 12px;\n//       flex-wrap: wrap;\n//       white-space: normal;\n//     }\n//     .file-indicator {\n//         font-size: 1.1em;\n//         cursor: help;\n//       white-space: nowrap;\n//     }\n//     .avatar {\n//       width: 40px;\n//       height: 40px;\n//       border-radius: 50%;\n//       background:#4e54c8;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//       color: white;\n//       font-weight: 600;\n//       font-size: 1.1rem;\n//       flex-shrink: 0;\n//     }\n//     .status-dot {\n//         height: 10px;\n//         width: 10px;\n//         border-radius: 50%;\n//         display: inline-block;\n//         margin-right: 5px;\n//     }\n//     .status-active {\n//         background-color: #48bb78;\n//     }\n//     .status-inactive {\n//         background-color: #e53e3e;\n//     }\n//     .role-badge {\n//       padding: 6px 12px;\n//       border-radius: 20px;\n//       font-size: 0.85rem;\n//       font-weight: 500;\n//       white-space: nowrap;\n//     }\n//     .role-admin {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .role-manager {\n//       background: #feebc8;\n//       color: #d69e2e;\n//     }\n//     .role-developer, .role-engineering {\n//       background: #c6f6d5;\n//       color: #276749;\n//     }\n//     .role-reporter {\n//       background: #e9d8fd;\n//       color: #6b46c1;\n//     }\n//     .role-sales {\n//         background: #bee3f8;\n//         color: #2c5282;\n//     }\n//     .role-hr {\n//         background: #fff0f5;\n//         color: #d53f8c;\n//     }\n//     .role-marketing {\n//         background: #faf089;\n//         color: #744210;\n//     }\n//     .action-buttons {\n//       display: flex;\n//       gap: 8px;\n//       flex-wrap: wrap;\n//     }\n//     .btn-edit,\n//     .btn-delete,\n//     .btn-success,\n//     .btn-cancel {\n//       padding: 8px;\n//       border: none;\n//       border-radius: 8px;\n//       cursor: pointer;\n//       transition: all 0.2s ease;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//     }\n//     .btn-edit {\n//       background: #e6fffa;\n//       color: #234e52;\n//     }\n//     .btn-edit:hover {\n//       background: #b2f5ea;\n//     }\n//     .btn-delete {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .btn-delete:hover {\n//       background: #feb2b2;\n//     }\n//     .btn-success {\n//       background: #c6f6d5;\n//       color: #276749;\n//     }\n//     .btn-success:hover {\n//       background: #9ae6b4;\n//     }\n//     .btn-cancel {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .btn-cancel:hover {\n//       background: #feb2b2;\n//     }\n//     .edit-input,\n//     .edit-select {\n//       padding: 8px 12px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 6px;\n//       width: 100%;\n//       font-size: 0.9rem;\n//       box-sizing: border-box;\n//     }\n//     .edit-input:focus,\n//     .edit-select:focus {\n//       outline: none;\n//       border-color: #667eea;\n//     }\n//     .empty-state {\n//       text-align: center;\n//       padding: 40px;\n//       color: #a0aec0;\n//       font-style: italic;\n//     }\n//     @media (max-width: 1024px) {\n//       .form-grid-expanded {\n//         grid-template-columns: 1fr;\n//       }\n//       .users-grid {\n//         grid-template-columns: 1fr;\n//       }\n//     }\n//     @media (max-width: 768px) {\n//       .users-container {\n//         padding: 10px;\n//       }\n//       .users-title {\n//         font-size: 2rem;\n//       }\n//       .users-form-card,\n//       .users-list-card {\n//         padding: 20px;\n//       }\n//       .card-header {\n//         flex-direction: column;\n//         align-items: stretch;\n//       }\n//       .search-container {\n//         min-width: auto;\n//       }\n//       .modern-table {\n//         font-size: 0.85rem;\n//       }\n//       .modern-table th,\n//       .modern-table td {\n//         padding: 8px 6px;\n//       }\n//       .action-buttons {\n//         flex-direction: row;\n//       }\n//       .user-info {\n//         gap: 6px;\n//       }\n//     }\n//     @media (max-width: 480px) {\n//       .users-title {\n//         font-size: 1.75rem;\n//       }\n//       .card-title {\n//         font-size: 1.25rem;\n//       }\n//       .user-info {\n//         flex-direction: column;\n//         text-align: center;\n//         align-items: flex-start;\n//       }\n//       .avatar {\n//         width: 32px;\n//         height: 32px;\n//         font-size: 1rem;\n//       }\n//     }\n\n//   `}</style>\n//     </div>\n//   );\n// }\n\n// for update 21/10\n\n// import React, { useEffect, useState } from \"react\";\n// import { listUsers, addUser, updateUser, deleteUser } from \"../../services/mockApi\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { FiUserPlus } from \"react-icons/fi\";\n\n// const ROLES_KEY = \"user-management-roles\";\n// const DEPARTMENTS_KEY = \"user-management-departments\";\n\n// const defaultRoles = [\n//   \"Associate Developer\",\n//   \"Senior Associate Developer\",\n//   \"HR\",\n//   \"Administration\"\n// ];\n// const defaultDepartments = [\n//   \"Frontend\",\n//   \"Backend\",\n//   \"Marketing\",\n//   \"AI/ML\",\n//   \"DevOps\",\n//   \"Testing\",\n//   \"FlowTrack\",\n//   \"NetWork\",\n//   \"Hr\"\n// ];\n\n// function getStored(key, fallback) {\n//   const saved = localStorage.getItem(key);\n//   try {\n//     return saved ? JSON.parse(saved) : fallback;\n//   } catch {\n//     return fallback;\n//   }\n// }\n\n// function setStored(key, value) {\n//   localStorage.setItem(key, JSON.stringify(value));\n// }\n\n// // Inline style objects\n// const styles = {\n//   usersContainer: {\n//     minHeight: \"100vh\",\n//     background: \"#D8F7FA\",\n//     padding: 20,\n//     fontFamily: \"'Inter', Arial, sans-serif\"\n//   },\n//   usersHeader: {\n//     textAlign: \"center\",\n//     marginBottom: 40,\n//     color: \"#2d3748\"\n//   },\n//   usersTitle: {\n//     fontSize: \"2.5rem\",\n//     fontWeight: 700,\n//     marginBottom: 8\n//   },\n//   usersSubtitle: {\n//     fontSize: \"1.1rem\",\n//     opacity: 0.8,\n//     color: \"#4a5568\"\n//   },\n//   errorMessage: {\n//     color: \"#e53e3e\",\n//     background: \"#fed7d7\",\n//     padding: \"8px 15px\",\n//     borderRadius: 8,\n//     marginTop: 15,\n//     display: \"inline-block\",\n//     fontWeight: 500\n//   },\n//   successMessage: {\n//     color: \"#276749\",\n//     background: \"#c6f6d5\",\n//     padding: \"8px 15px\",\n//     borderRadius: 8,\n//     marginTop: 15,\n//     display: \"inline-block\",\n//     fontWeight: 500\n//   },\n//   usersGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"1fr\",\n//     gap: 30,\n//     maxWidth: 900,\n//     margin: \"0 auto\"\n//   },\n//   glassmorphism: {\n//     background: \"rgba(255,255,255,0.95)\",\n//     backdropFilter: \"blur(10px)\",\n//     borderRadius: 20,\n//     border: \"1px solid rgba(255,255,255,0.2)\",\n//     boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\n//   },\n//   formCard: {\n//     padding: 30\n//   },\n//   cardHeader: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     marginBottom: 30,\n//     flexWrap: \"wrap\",\n//     gap: 15\n//   },\n//   cardTitle: {\n//     fontSize: \"1.5rem\",\n//     fontWeight: 600,\n//     color: \"#2d3748\",\n//     display: \"flex\",\n//     alignItems: \"center\"\n//   },\n//   iconSpacing: {\n//     marginRight: 10\n//   },\n//   formGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"1fr 1fr\",\n//     gap: 20,\n//     marginBottom: 30\n//   },\n//   inputGroup: {\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   },\n//   inputLabel: {\n//     fontWeight: 500,\n//     marginBottom: 8,\n//     color: \"#4a5568\"\n//   },\n//   checkboxGroup: {},\n//   checkboxLabel: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     fontWeight: 400,\n//     color: \"#4a5568\",\n//     cursor: \"pointer\",\n//     padding: 10,\n//     borderRadius: 8\n//   },\n//   checkbox: {\n//     marginRight: 10,\n//     width: 18,\n//     height: 18,\n//     accentColor: \"#667eea\"\n//   },\n//   modernInput: {\n//     padding: \"12px 16px\",\n//     border: \"2px solid #e2e8f0\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     background: \"#D8F7FA\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//     transition: \"all 0.3s\"\n//   },\n//   modernSelect: {\n//     padding: \"12px 16px\",\n//     border: \"2px solid #e2e8f0\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     background: \"#D8F7FA\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//     transition: \"all 0.3s\"\n//   },\n//   createBtn: {\n//     gridColumn: \"1 / -1\",\n//     width: \"100%\",\n//     padding: 14,\n//     background: \"#4e54c8\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     fontWeight: 600,\n//     cursor: \"pointer\",\n//     transition: \"transform 0.2s\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\"\n//   }\n// };\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: \"\",\n//     email: \"\",\n//     role: defaultRoles[0],\n//     department: defaultDepartments[0],\n//     active: true,\n//     mobileNumber: \"\",\n//     passwordResetNeeded: false,\n//     profileFile: null,\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({});\n//   const [error, setError] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [roles, setRoles] = useState(getStored(ROLES_KEY, defaultRoles));\n//   const [departments, setDepartments] = useState(getStored(DEPARTMENTS_KEY, defaultDepartments));\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         setUsers(data);\n//       } catch (err) {\n//         setError(\"Failed to load users\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   useEffect(() => {\n//     setStored(ROLES_KEY, roles);\n//   }, [roles]);\n//   useEffect(() => {\n//     setStored(DEPARTMENTS_KEY, departments);\n//   }, [departments]);\n\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm((prev) => ({\n//       ...prev,\n//       [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\n//     }));\n//     setError(null);\n//     setSuccessMessage(null); // Clear success message on input change\n//   };\n\n//   const create = async () => {\n//     if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\n//       setError(\"First Name and Email are required.\");\n//       setSuccessMessage(null);\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: newUserForm.firstName.trim(),\n//         profileFile: newUserForm.profileFile\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n//           : null,\n//       };\n//       await addUser(newUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setNewUserForm(defaultNewUser);\n//       setError(null);\n//       setSuccessMessage(\"User added successfully!\"); // Show success message\n//     } catch (err) {\n//       setError(\"Failed to add user\");\n//       setSuccessMessage(null);\n//     }\n//   };\n\n//   // Responsive fix for single-column on mobile\n//   const formGridStyle = window.innerWidth <= 1024\n//     ? { ...styles.formGrid, gridTemplateColumns: \"1fr\" }\n//     : styles.formGrid;\n\n//   return (\n//     <div style={styles.usersContainer}>\n//       <div style={styles.usersHeader}>\n//         <h1 style={styles.usersTitle}>User Management</h1>\n//         <p style={styles.usersSubtitle}>Manage your users, roles, and departments</p>\n//       </div>\n//       <div style={styles.usersGrid}>\n//         <div style={{ ...styles.glassmorphism, ...styles.formCard }}>\n//           <div style={styles.cardHeader}>\n//             <h2 style={styles.cardTitle}>\n//               <span style={styles.iconSpacing}><FiUserPlus /></span>\n//               Profile\n//             </h2>\n//           </div>\n//           <div style={formGridStyle}>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"firstName\">Full Name</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"firstName\"\n//                 name=\"firstName\"\n//                 type=\"text\"\n//                 value={newUserForm.firstName}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"email\">Email</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"email\"\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={newUserForm.email}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"role\">Role</label>\n//               <select\n//                 style={styles.modernSelect}\n//                 id=\"role\"\n//                 name=\"role\"\n//                 value={newUserForm.role}\n//                 onChange={handleNewUserChange}\n//               >\n//                 {roles.map((r) => (\n//                   <option key={r} value={r}>{r}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"department\">Department</label>\n//               <select\n//                 style={styles.modernSelect}\n//                 id=\"department\"\n//                 name=\"department\"\n//                 value={newUserForm.department}\n//                 onChange={handleNewUserChange}\n//               >\n//                 {departments.map((d) => (\n//                   <option key={d} value={d}>{d}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"mobileNumber\">Mobile Number</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"mobileNumber\"\n//                 name=\"mobileNumber\"\n//                 type=\"tel\"\n//                 value={newUserForm.mobileNumber}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\n//               <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded\">\n//                 <input\n//                   id=\"passwordResetNeeded\"\n//                   name=\"passwordResetNeeded\"\n//                   type=\"checkbox\"\n//                   checked={newUserForm.passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                   style={styles.checkbox}\n//                 />\n//                 Password Reset Needed\n//               </label>\n//             </div>\n//           </div>\n//           {/* Submit Button added here */}\n//           <button style={styles.createBtn} onClick={create}>\n//             Submit\n//           </button>\n//           {error && (\n//             <p style={styles.errorMessage}>{error}</p>\n//           )}\n//           {successMessage && (\n//             <p style={styles.successMessage}>{successMessage}</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// \n\nimport React, { useEffect, useState } from \"react\";\nimport { listUsers, addUser, updateUser, deleteUser } from \"../../services/userApi\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FiUserPlus } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROLES_KEY = \"user-management-roles\";\nconst DEPARTMENTS_KEY = \"user-management-departments\";\nconst defaultRoles = [\"Associate Developer\", \"Senior Associate Developer\", \"HR\", \"Administration\"];\nconst defaultDepartments = [\"Frontend\", \"Backend\", \"Marketing\", \"AI/ML\", \"DevOps\", \"Testing\", \"FlowTrack\", \"NetWork\", \"Hr\"];\nfunction getStored(key, fallback) {\n  const saved = localStorage.getItem(key);\n  try {\n    return saved ? JSON.parse(saved) : fallback;\n  } catch {\n    return fallback;\n  }\n}\nfunction setStored(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\n// Inline style objects\nconst styles = {\n  usersContainer: {\n    minHeight: \"100vh\",\n    background: \"#D8F7FA\",\n    padding: 20,\n    fontFamily: \"'Inter', Arial, sans-serif\"\n  },\n  usersHeader: {\n    textAlign: \"center\",\n    marginBottom: 40,\n    color: \"#2d3748\"\n  },\n  usersTitle: {\n    fontSize: \"2.5rem\",\n    fontWeight: 700,\n    marginBottom: 8\n  },\n  usersSubtitle: {\n    fontSize: \"1.1rem\",\n    opacity: 0.8,\n    color: \"#4a5568\"\n  },\n  errorMessage: {\n    color: \"#e53e3e\",\n    background: \"#fed7d7\",\n    padding: \"8px 15px\",\n    borderRadius: 8,\n    marginTop: 15,\n    display: \"inline-block\",\n    fontWeight: 500\n  },\n  successMessage: {\n    color: \"#276749\",\n    background: \"#c6f6d5\",\n    padding: \"8px 15px\",\n    borderRadius: 8,\n    marginTop: 15,\n    display: \"inline-block\",\n    fontWeight: 500\n  },\n  usersGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gap: 30,\n    maxWidth: 900,\n    margin: \"0 auto\"\n  },\n  glassmorphism: {\n    background: \"rgba(255,255,255,0.95)\",\n    backdropFilter: \"blur(10px)\",\n    borderRadius: 20,\n    border: \"1px solid rgba(255,255,255,0.2)\",\n    boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\n  },\n  formCard: {\n    padding: 30\n  },\n  cardHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    flexWrap: \"wrap\",\n    gap: 15\n  },\n  cardTitle: {\n    fontSize: \"1.5rem\",\n    fontWeight: 600,\n    color: \"#2d3748\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  iconSpacing: {\n    marginRight: 10\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gap: 20,\n    marginBottom: 30\n  },\n  inputGroup: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  inputLabel: {\n    fontWeight: 500,\n    marginBottom: 8,\n    color: \"#4a5568\"\n  },\n  checkboxGroup: {},\n  checkboxLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n    fontWeight: 400,\n    color: \"#4a5568\",\n    cursor: \"pointer\",\n    padding: 10,\n    borderRadius: 8\n  },\n  checkbox: {\n    marginRight: 10,\n    width: 18,\n    height: 18,\n    accentColor: \"#667eea\"\n  },\n  modernInput: {\n    padding: \"12px 16px\",\n    border: \"2px solid #e2e8f0\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    background: \"#D8F7FA\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    transition: \"all 0.3s\"\n  },\n  modernSelect: {\n    padding: \"12px 16px\",\n    border: \"2px solid #e2e8f0\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    background: \"#D8F7FA\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    transition: \"all 0.3s\"\n  },\n  createBtn: {\n    gridColumn: \"1 / -1\",\n    width: \"100%\",\n    padding: 14,\n    background: \"#4e54c8\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    fontWeight: 600,\n    cursor: \"pointer\",\n    transition: \"transform 0.2s\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\nexport default function Users() {\n  _s();\n  const defaultNewUser = {\n    firstName: \"\",\n    email: \"\",\n    role: defaultRoles[0],\n    department: defaultDepartments[0],\n    active: true,\n    mobileNumber: \"\",\n    passwordResetNeeded: false,\n    profileFile: null\n  };\n  const [users, setUsers] = useState([]);\n  const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n  const [editingId, setEditingId] = useState(null);\n  const [editForm, setEditForm] = useState({});\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [roles, setRoles] = useState(defaultRoles);\n  const [departments, setDepartments] = useState(defaultDepartments);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await listUsers();\n        setUsers(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching users:', err);\n        setError(err.message || \"Failed to load users\");\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    setStored(ROLES_KEY, roles);\n  }, [roles]);\n  useEffect(() => {\n    setStored(DEPARTMENTS_KEY, departments);\n  }, [departments]);\n  const handleNewUserChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n      files\n    } = e.target;\n    setNewUserForm(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value\n    }));\n    setError(null);\n    setSuccessMessage(null); // Clear success message on input change\n  };\n  const create = async () => {\n    if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\n      setError(\"First Name and Email are required.\");\n      setSuccessMessage(null);\n      return;\n    }\n    try {\n      const newUser = {\n        ...newUserForm,\n        name: newUserForm.firstName.trim(),\n        profileFile: newUserForm.profileFile ? {\n          name: newUserForm.profileFile.name,\n          size: newUserForm.profileFile.size\n        } : null\n      };\n      await addUser(newUser);\n      const updatedUsers = await listUsers();\n      setUsers(updatedUsers);\n      setNewUserForm(defaultNewUser);\n      setError(null);\n      setSuccessMessage(\"User added successfully!\"); // Show success message\n    } catch (err) {\n      console.error('Error creating user:', err);\n      setError(err.message || \"Failed to add user\");\n      setSuccessMessage(null);\n    }\n  };\n\n  // Responsive fix for single-column on mobile\n  const formGridStyle = window.innerWidth <= 1024 ? {\n    ...styles.formGrid,\n    gridTemplateColumns: \"1fr\"\n  } : styles.formGrid;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.usersContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.usersHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.usersTitle,\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.usersSubtitle,\n        children: \"Manage your users, roles, and departments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1723,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.usersGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.glassmorphism,\n          ...styles.formCard\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cardHeader,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: styles.cardTitle,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.iconSpacing,\n              children: /*#__PURE__*/_jsxDEV(FiUserPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1731,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1731,\n              columnNumber: 15\n            }, this), \"Profile\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1730,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: formGridStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"firstName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1737,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"firstName\",\n              name: \"firstName\",\n              type: \"text\",\n              value: newUserForm.firstName,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1738,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1736,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1748,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: newUserForm.email,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1749,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1759,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              style: styles.modernSelect,\n              id: \"role\",\n              name: \"role\",\n              value: newUserForm.role,\n              onChange: handleNewUserChange,\n              children: roles.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: r,\n                children: r\n              }, r, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1768,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1760,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1773,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              style: styles.modernSelect,\n              id: \"department\",\n              name: \"department\",\n              value: newUserForm.department,\n              onChange: handleNewUserChange,\n              children: departments.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1782,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1774,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"mobileNumber\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1787,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"mobileNumber\",\n              name: \"mobileNumber\",\n              type: \"tel\",\n              value: newUserForm.mobileNumber,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1788,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1786,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"dateOfBirth\",\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1798,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"dateOfBirth\",\n              name: \"dateOfBirth\",\n              type: \"date\",\n              value: newUserForm.dateOfBirth,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1799,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.inputGroup,\n              ...styles.checkboxGroup\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.checkboxLabel,\n              htmlFor: \"passwordResetNeeded\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"passwordResetNeeded\",\n                name: \"passwordResetNeeded\",\n                type: \"checkbox\",\n                checked: newUserForm.passwordResetNeeded,\n                onChange: handleNewUserChange,\n                style: styles.checkbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1810,\n                columnNumber: 17\n              }, this), \"Password Reset Needed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1809,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1808,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1735,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.createBtn,\n          onClick: create,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1823,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.errorMessage,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1827,\n          columnNumber: 13\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.successMessage,\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1830,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1728,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1727,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1722,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"GzvN0KpmrHeUeWGElGsyWbFSpsc=\");\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","listUsers","addUser","updateUser","deleteUser","v4","uuidv4","FiUserPlus","jsxDEV","_jsxDEV","ROLES_KEY","DEPARTMENTS_KEY","defaultRoles","defaultDepartments","getStored","key","fallback","saved","localStorage","getItem","JSON","parse","setStored","value","setItem","stringify","styles","usersContainer","minHeight","background","padding","fontFamily","usersHeader","textAlign","marginBottom","color","usersTitle","fontSize","fontWeight","usersSubtitle","opacity","errorMessage","borderRadius","marginTop","display","successMessage","usersGrid","gridTemplateColumns","gap","maxWidth","margin","glassmorphism","backdropFilter","border","boxShadow","formCard","cardHeader","justifyContent","alignItems","flexWrap","cardTitle","iconSpacing","marginRight","formGrid","inputGroup","flexDirection","inputLabel","checkboxGroup","checkboxLabel","cursor","checkbox","width","height","accentColor","modernInput","boxSizing","transition","modernSelect","createBtn","gridColumn","Users","_s","defaultNewUser","firstName","email","role","department","active","mobileNumber","passwordResetNeeded","profileFile","users","setUsers","newUserForm","setNewUserForm","editingId","setEditingId","editForm","setEditForm","error","setError","setSuccessMessage","roles","setRoles","departments","setDepartments","fetchUsers","data","err","console","message","handleNewUserChange","e","name","type","checked","files","target","prev","create","trim","newUser","size","updatedUsers","formGridStyle","window","innerWidth","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","r","d","dateOfBirth","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hussa/Desktop/ticketing/flowtrack/frontend/src/components/users/Users.js"],"sourcesContent":["\n// full code before changes\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import {\n//   FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch, FiUpload,\n//   FiPlus, FiMinus\n// } from 'react-icons/fi';\n\n// const ROLES_KEY = 'user-management-roles';\n// const DEPARTMENTS_KEY = 'user-management-departments';\n\n// const defaultRoles = ['Assosiate Developer', 'Senior Assosiate Developer', 'HR', 'Administration'];\n// const defaultDepartments = ['Frontend', 'Backend', 'Middleware', 'AI/ML','DevOps','Testing','FlowTrack','NetWork','Hr'];\n\n// function getStored(key, fallback) {\n//   const saved = localStorage.getItem(key);\n//   try {\n//     return saved ? JSON.parse(saved) : fallback;\n//   } catch {\n//     return fallback;\n//   }\n// }\n// function setStored(key, value) {\n//   localStorage.setItem(key, JSON.stringify(value));\n// }\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     role: 'Developer',\n//     department: 'Engineering',\n//     active: true,\n//     mobileNumber: '',\n//     passwordResetNeeded: false,\n//     profileFile: null,\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({});\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [error, setError] = useState(null);\n\n//   // Roles & Departments state\n//   const [roles, setRoles] = useState(() => getStored(ROLES_KEY, defaultRoles));\n//   const [departments, setDepartments] = useState(() => getStored(DEPARTMENTS_KEY, defaultDepartments));\n\n//   // Modal state\n//   const [showRoleModal, setShowRoleModal] = useState(false);\n//   const [showDepartmentModal, setShowDepartmentModal] = useState(false);\n//   const [roleInput, setRoleInput] = useState('');\n//   const [departmentInput, setDepartmentInput] = useState('');\n//   const [roleToDelete, setRoleToDelete] = useState('');\n//   const [departmentToDelete, setDepartmentToDelete] = useState('');\n\n//   // Load users on mount\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         setUsers(data);\n//       } catch (err) {\n//         console.error('Failed to load users:', err);\n//         setError('Failed to load users');\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   // Save roles and departments to localStorage if changed\n//   useEffect(() => { setStored(ROLES_KEY, roles); }, [roles]);\n//   useEffect(() => { setStored(DEPARTMENTS_KEY, departments); }, [departments]);\n\n//   // Handlers\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setEditForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const create = async () => {\n//     if (!newUserForm.firstName.trim() || !newUserForm.lastName.trim() || !newUserForm.email.trim()) {\n//       setError('First Name, Email are required.');\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: `${newUserForm.firstName.trim()} ${newUserForm.lastName.trim()}`,\n//         profileFile: newUserForm.profileFile\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n//           : null\n//       };\n//       await addUser(newUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setNewUserForm(defaultNewUser);\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to add user:', err);\n//       setError('Failed to add user');\n//     }\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ ...u });\n//     setError(null);\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({});\n//     setError(null);\n//   };\n\n//   const saveEdit = async (id) => {\n//     if (!editForm.firstName.trim() || !editForm.lastName.trim() || !editForm.email.trim()) {\n//       setError('Full Name, and Email cannot be empty.');\n//       return;\n//     }\n//     try {\n//       const updatedUser = {\n//         ...editForm,\n//         name: `${editForm.firstName.trim()} ${editForm.lastName.trim()}`,\n//         profileFile: editForm.profileFile && editForm.profileFile.name\n//           ? { name: editForm.profileFile.name, size: editForm.profileFile.size }\n//           : editForm.profileFile\n//       };\n//       await updateUser(updatedUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       cancelEdit();\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to update user:', err);\n//       setError('User not found or failed to update');\n//     }\n//   };\n\n//   const remove = async (id) => {\n//     try {\n//       await deleteUser(id);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to delete user:', err);\n//       setError('User not found or failed to delete');\n//     }\n//   };\n\n//   const filteredUsers = users.filter(user => {\n//     const searchLower = searchTerm.toLowerCase();\n//     return (\n//       (user.name && user.name.toLowerCase().includes(searchLower)) ||\n//       (user.firstName && user.firstName.toLowerCase().includes(searchLower)) ||\n//       (user.lastName && user.lastName.toLowerCase().includes(searchLower)) ||\n//       (user.email && user.email.toLowerCase().includes(searchLower)) ||\n//       (user.role && user.role.toLowerCase().includes(searchLower)) ||\n//       (user.department && user.department.toLowerCase().includes(searchLower))\n//     );\n//   });\n\n//   const getRoleColor = (roleOrDepartment) => {\n//     const colors = {\n//       'admin': 'role-admin',\n//       'manager': 'role-manager',\n//       'developer': 'role-developer',\n//       'reporter': 'role-reporter',\n//       'engineering': 'role-developer',\n//       'sales': 'role-sales',\n//       'hr': 'role-hr',\n//       'marketing': 'role-marketing',\n\n//     };\n//     return colors[roleOrDepartment.toLowerCase()] || '';\n//   };\n\n//   // ---- Modal handlers ----\n//   // Role modals\n//   const openRoleModal = () => { setShowRoleModal(true); setRoleInput(''); setRoleToDelete(''); };\n//   const closeRoleModal = () => { setShowRoleModal(false); setRoleInput(''); setRoleToDelete(''); };\n\n//   const addRole = () => {\n//     const v = roleInput.trim();\n//     if (v && !roles.includes(v)) {\n//       setRoles([...roles, v]);\n//       setRoleInput('');\n//     }\n//   };\n//   const deleteRole = (r) => {\n//     setRoles(roles.filter(role => role !== r));\n//     // Optionally, update forms if current value is deleted\n//     if (newUserForm.role === r) setNewUserForm(prev => ({ ...prev, role: roles[0] || '' }));\n//     if (editForm.role === r) setEditForm(prev => ({ ...prev, role: roles[0] || '' }));\n//     setRoleToDelete('');\n//   };\n\n//   // Department modals\n//   const openDepartmentModal = () => { setShowDepartmentModal(true); setDepartmentInput(''); setDepartmentToDelete(''); };\n//   const closeDepartmentModal = () => { setShowDepartmentModal(false); setDepartmentInput(''); setDepartmentToDelete(''); };\n\n//   const addDepartment = () => {\n//     const v = departmentInput.trim();\n//     if (v && !departments.includes(v)) {\n//       setDepartments([...departments, v]);\n//       setDepartmentInput('');\n//     }\n//   };\n//   const deleteDepartment = (d) => {\n//     setDepartments(departments.filter(dep => dep !== d));\n//     if (newUserForm.department === d)\n//       setNewUserForm(prev => ({ ...prev, department: departments[0] || '' }));\n//     if (editForm.department === d)\n//       setEditForm(prev => ({ ...prev, department: departments[0] || '' }));\n//     setDepartmentToDelete('');\n//   };\n\n//   return (\n//     <div className=\"users-container\">\n//       <style jsx global>{`\n//         body { background: #D8F7FA; min-height: 100vh; }\n//       `}</style>\n//       {/* Header */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management System 🧑‍💼</h1>\n//         <p className=\"users-subtitle\">Manage your team members, roles, and administrative settings.</p>\n//         {error && <p className=\"error-message\">{error}</p>}\n//       </div>\n//       <div className=\"users-grid\">\n//         {/* ---- FORM SECTION ---- */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" /> Add New User\n//             </h2>\n//           </div>\n//           <div className=\"form-grid-expanded\">\n//             {/* Standard fields */}\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name *</label>\n//               <input className=\"modern-input\" name=\"firstName\"\n//                 value={newUserForm.firstName}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"First Name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address *</label>\n//               <input className=\"modern-input\" name=\"email\"\n//                 value={newUserForm.email}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Email Address\"\n//                 type=\"email\"\n//               />\n//             </div>\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Mobile Number</label>\n//               <input className=\"modern-input\" name=\"mobileNumber\"\n//                 value={newUserForm.mobileNumber}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Mobile Number\"\n//                 type=\"tel\"\n//               />\n//             </div>\n//             {/* Role dropdown with add/delete buttons */}\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\n//               <label className=\"input-label\">Role\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\n//                   onClick={openRoleModal} title=\"Edit roles\" />\n//               </label>\n//               <select className=\"modern-select\" name=\"role\"\n//                 value={newUserForm.role}\n//                 onChange={handleNewUserChange}>\n//                 {roles.map(r => (\n//                   <option key={r}>{r}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             {/* Department dropdown with add/delete buttons */}\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\n//               <label className=\"input-label\">Department\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\n//                   onClick={openDepartmentModal} title=\"Edit departments\" />\n//               </label>\n//               <select className=\"modern-select\" name=\"department\"\n//                 value={newUserForm.department}\n//                 onChange={handleNewUserChange}>\n//                 {departments.map(d => (\n//                   <option key={d}>{d}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Date of Birth</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"dob\"\n//                 type=\"date\"\n//                 value={newUserForm.dob}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n\n//             {/* <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">User Status</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"active\"\n//                   checked={newUserForm.active}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">{newUserForm.active ? 'Active' : 'Inactive'}</span>\n//               </label>\n//             </div> */}\n//             <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">Password Reset</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"passwordResetNeeded\"\n//                   checked={newUserForm.passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">Reset on next login</span>\n//               </label>\n//             </div>\n//           </div>\n//           {/* <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button> */}\n//         </div>\n//         {/* ---- LIST SECTION ---- */}\n//         {/* <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">\n//               Team Members ({filteredUsers.length})\n//             </h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Department</th>\n//                   <th>Role</th>\n//                   <th>Active</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input className=\"edit-input\" name=\"firstName\"\n//                             value={editForm.firstName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"First Name\"\n//                           />\n//                           <input className=\"edit-input\"\n//                             name=\"lastName\"\n//                             value={editForm.lastName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"Last Name\"\n//                             style={{ marginTop: '5px' }}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input className=\"edit-input\" name=\"email\"\n//                             value={editForm.email || ''}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n//                             <select className=\"edit-select\"\n//                               name=\"department\"\n//                               value={editForm.department || defaultNewUser.department}\n//                               onChange={handleEditChange}>\n//                               {departments.map(d => (\n//                                 <option key={d}>{d}</option>\n//                               ))}\n//                             </select>\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\n//                               onClick={openDepartmentModal} title=\"Edit departments\" />\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n//                             <select className=\"edit-select\"\n//                               name=\"role\"\n//                               value={editForm.role || defaultNewUser.role}\n//                               onChange={handleEditChange}>\n//                               {roles.map(r => (\n//                                 <option key={r}>{r}</option>\n//                               ))}\n//                             </select>\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\n//                               onClick={openRoleModal} title=\"Edit roles\" />\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <input type=\"checkbox\"\n//                             name=\"active\"\n//                             checked={editForm.active || false}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.firstName ? u.firstName.charAt(0) : (u.name ? u.name.charAt(0) : 'U')}</div>\n//                             <span>{u.firstName || u.name} {u.lastName}</span>\n//                             <div className=\"file-indicator\" title={u.profileFile ? `File: ${u.profileFile.name}` : 'No file'}>\n//                               {u.profileFile && '📁'}\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.department || 'engineering')}`}>\n//                             {u.department}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.role || 'developer')}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <span className={`status-dot ${u.active ? 'status-active' : 'status-inactive'}`}></span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div> */}\n//       </div>\n//       {/* ------ MODALS ------ */}\n//       {showRoleModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <h3>Edit Roles</h3>\n//             <div style={{ marginBottom: 12 }}>\n//               <input type=\"text\"\n//                 placeholder=\"Add new role\"\n//                 className=\"modern-input\"\n//                 value={roleInput}\n//                 onChange={e => setRoleInput(e.target.value)}\n//                 onKeyDown={e => e.key === 'Enter' && addRole()}\n//               />\n//               <button onClick={addRole} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\n//             </div>\n//             <div>\n//               {roles.map(r => (\n//                 <div key={r} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\n//                   <span>{r}</span>\n//                   <FiMinus style={{ cursor: 'pointer', color: '#e53e3e' }}\n//                     title=\"Delete role\"\n//                     onClick={() => setRoleToDelete(r)}\n//                   />\n//                   {roleToDelete === r && (\n//                     <span style={{ marginLeft: 6 }}>\n//                       Delete?\n//                       <button className=\"btn-delete\" onClick={() => deleteRole(r)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setRoleToDelete('')}>No</button>\n//                     </span>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeRoleModal}>Close</button>\n//           </div>\n//         </div>\n//       )}\n//       {showDepartmentModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <h3>Edit Departments</h3>\n//             <div style={{ marginBottom: 12 }}>\n//               <input type=\"text\"\n//                 placeholder=\"Add new department\"\n//                 className=\"modern-input\"\n//                 value={departmentInput}\n//                 onChange={e => setDepartmentInput(e.target.value)}\n//                 onKeyDown={e => e.key === 'Enter' && addDepartment()}\n//               />\n//               <button onClick={addDepartment} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\n//             </div>\n//             <div>\n//               {departments.map(d => (\n//                 <div key={d} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\n//                   <span>{d}</span>\n//                   <FiMinus\n//                     style={{ cursor: 'pointer', color: '#e53e3e' }}\n//                     title=\"Delete department\"\n//                     onClick={() => setDepartmentToDelete(d)}\n//                   />\n//                   {departmentToDelete === d && (\n//                     <span style={{ marginLeft: 6 }}>\n//                       Delete?\n//                       <button className=\"btn-delete\" onClick={() => deleteDepartment(d)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setDepartmentToDelete('')}>No</button>\n//                     </span>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeDepartmentModal}>Close</button>\n//           </div>\n//         </div>\n//       )}\n//       {/* --- Modal Styles --- */}\n//   <style jsx>{`\n//     .modal-overlay {\n//       position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n//       background: rgba(0,0,0,.15);\n//       z-index: 1100;\n//       display: flex;\n//       justify-content: center;\n//       align-items: center;\n//     }\n//     .modal-content {\n//       background: #fff;\n//       border-radius: 12px;\n//       padding: 30px 35px;\n//       box-shadow: 0 8px 32px rgba(0,0,0,.15);\n//       min-width: 350px;\n//       max-width: 95vw;\n//       font-size: 1.03rem;\n//       color: #2d3748;\n//     }\n//     .modal-content h3 { margin-top:0; font-size:1.18em; margin-bottom:0.9em; }\n//     .modal-content input { margin-bottom:6px; }\n\n\n//     .users-container {\n//       min-height: 100vh;\n//       background: #D8F7FA;\n//       padding: 20px;\n//     }\n//     /* ... (rest of your unchanged styles remain here) ... */\n//     .users-header {\n//       text-align: center;\n//       margin-bottom: 40px;\n//       color: #2d3748;\n//     }\n//     .users-title {\n//       font-size: 2.5rem;\n//       font-weight: 700;\n//       margin-bottom: 8px;\n//     }\n//     .users-subtitle {\n//       font-size: 1.1rem;\n//       opacity: 0.8;\n//       color: #4a5568;\n//     }\n//     .error-message {\n//         color: #e53e3e;\n//         background: #fed7d7;\n//         padding: 8px 15px;\n//         border-radius: 8px;\n//         margin-top: 15px;\n//         display: inline-block;\n//         font-weight: 500;\n//     }\n//     .users-grid {\n//       display: grid;\n//       grid-template-columns: 1fr;\n//       gap: 30px;\n//       max-width: 1400px;\n//       margin: 0 auto;\n//     }\n//     @media (min-width: 1024px) {\n//       .users-grid {\n//         grid-template-columns: 450px 1fr;\n//       }\n//     }\n//     .glassmorphism {\n//       background: rgba(255, 255, 255, 0.95);\n\n//       backdrop-filter: blur(10px);\n//       border-radius: 20px;\n//       border: 1px solid rgba(255, 255, 255, 0.2);\n//       box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05);\n//     }\n//     .users-form-card,\n//     .users-list-card {\n//       padding: 30px;\n//     }\n//     .card-header {\n//       display: flex;\n//       justify-content: space-between;\n//       align-items: center;\n//       margin-bottom: 30px;\n//       flex-wrap: wrap;\n//       gap: 15px;\n//     }\n//     .card-title {\n//       font-size: 1.5rem;\n//       font-weight: 600;\n//       color: #2d3748;\n//       display: flex;\n//       align-items: center;\n//     }\n//     .icon-spacing {\n//       margin-right: 10px;\n//     }\n//     .form-grid-expanded {\n//       display: grid;\n//       grid-template-columns: 1fr 1fr;\n//       gap: 20px;\n//       margin-bottom: 30px;\n//     }\n//     .input-group {\n//       display: flex;\n//       flex-direction: column;\n//     }\n//     .input-label {\n//       font-weight: 500;\n//       margin-bottom: 8px;\n//       color: #4a5568;\n//     }\n//     .checkbox-group {\n//         grid-column: span 1;\n//     }\n//     .checkbox-label {\n//         display: flex;\n//         align-items: center;\n//         font-weight: 400;\n//         color: #4a5568;\n//         cursor: pointer;\n//         padding: 10px;\n//         border-radius: 8px;\n//     }\n//     .checkbox-label input[type=\"checkbox\"] {\n//         margin-right: 10px;\n//         width: 18px;\n//         height: 18px;\n//         accent-color: #667eea;\n//     }\n//     .file-group input[type=\"file\"] {\n//       display: none;\n//     }\n//     .file-upload-btn {\n//       padding: 12px 16px;\n//       border: 2px solid #667eea;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       font-weight: 500;\n//       color: #667eea;\n//       background: #ebf4ff;\n//       cursor: pointer;\n//       transition: background-color 0.2s;\n//       display: flex;\n//       align-items: center;\n//       justify-content: flex-start;\n//     }\n//     .file-upload-btn:hover {\n//       background: #d4e3ff;\n//     }\n//     .file-upload-btn .btn-icon {\n//       margin-right: 8px;\n//       font-size: 1.2rem;\n//     }\n//     .modern-input,\n//     .modern-select {\n//       padding: 12px 16px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       transition: all 0.3s ease;\n//       // background: #D8F7FA;\n//       width: 100%;\n//       box-sizing: border-box;\n//     }\n//     .modern-input:focus,\n//     .modern-select:focus {\n//       outline: none;\n//       border-color: #667eea;\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//     }\n//     .create-btn {\n//       grid-column: 1 / -1;\n//       width: 100%;\n//       padding: 14px;\n//       background: #4e54c8;\n//       color: white;\n//       border: none;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       font-weight: 600;\n//       cursor: pointer;\n//       transition: transform 0.2s ease;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//     }\n//     .create-btn:hover {\n//       transform: translateY(-2px);\n//       box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//     }\n//     .btn-icon {\n//       margin-right: 8px;\n//     }\n//     .search-container {\n//       position: relative;\n//       min-width: 250px;\n//     }\n//     .search-input {\n//       padding: 12px 16px 12px 40px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       width: 100%;\n//       transition: all 0.3s ease;\n//     }\n//     .search-input:focus {\n//       outline: none;\n//       border-color: #667eea;\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//     }\n//     .search-icon {\n//       position: absolute;\n//       left: 12px;\n//       top: 50%;\n//       transform: translateY(-50%);\n//       color: #a0aec0;\n//     }\n//     .table-container {\n//       border-radius: 10px;\n//       /* Removed overflow-x to prevent horizontal scroll */\n//     }\n//     .modern-table {\n//       width: 100%;\n//       border-collapse: collapse;\n//       table-layout: auto; /* Changed from fixed or default to auto */\n//       /* Removed min-width */\n//     }\n//     .modern-table th {\n//       background: #f7fafc;\n//       padding: 12px 8px; /* Slightly reduce padding for smaller widths */\n//       text-align: left;\n//       font-weight: 600;\n//       color: #4a5568;\n//       border-bottom: 2px solid #e2e8f0;\n//       word-wrap: break-word;\n//     }\n//     .modern-table td {\n//       padding: 12px 8px; /* Adjust padding */\n//       border-bottom: 1px solid #e2e8f0;\n//       vertical-align: middle;\n//       word-wrap: break-word;\n//       white-space: normal;\n//     }\n//     .modern-table tr:hover {\n//       background: #D8F7FA;\n//     }\n//     .editing-row {\n//       background: #fff9e6 !important;\n//     }\n//     .user-info {\n//       display: flex;\n//       align-items: center;\n//       gap: 12px;\n//       flex-wrap: wrap;\n//       white-space: normal;\n//     }\n//     .file-indicator {\n//         font-size: 1.1em;\n//         cursor: help;\n//       white-space: nowrap;\n//     }\n//     .avatar {\n//       width: 40px;\n//       height: 40px;\n//       border-radius: 50%;\n//       background:#4e54c8;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//       color: white;\n//       font-weight: 600;\n//       font-size: 1.1rem;\n//       flex-shrink: 0;\n//     }\n//     .status-dot {\n//         height: 10px;\n//         width: 10px;\n//         border-radius: 50%;\n//         display: inline-block;\n//         margin-right: 5px;\n//     }\n//     .status-active {\n//         background-color: #48bb78;\n//     }\n//     .status-inactive {\n//         background-color: #e53e3e;\n//     }\n//     .role-badge {\n//       padding: 6px 12px;\n//       border-radius: 20px;\n//       font-size: 0.85rem;\n//       font-weight: 500;\n//       white-space: nowrap;\n//     }\n//     .role-admin {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .role-manager {\n//       background: #feebc8;\n//       color: #d69e2e;\n//     }\n//     .role-developer, .role-engineering {\n//       background: #c6f6d5;\n//       color: #276749;\n//     }\n//     .role-reporter {\n//       background: #e9d8fd;\n//       color: #6b46c1;\n//     }\n//     .role-sales {\n//         background: #bee3f8;\n//         color: #2c5282;\n//     }\n//     .role-hr {\n//         background: #fff0f5;\n//         color: #d53f8c;\n//     }\n//     .role-marketing {\n//         background: #faf089;\n//         color: #744210;\n//     }\n//     .action-buttons {\n//       display: flex;\n//       gap: 8px;\n//       flex-wrap: wrap;\n//     }\n//     .btn-edit,\n//     .btn-delete,\n//     .btn-success,\n//     .btn-cancel {\n//       padding: 8px;\n//       border: none;\n//       border-radius: 8px;\n//       cursor: pointer;\n//       transition: all 0.2s ease;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//     }\n//     .btn-edit {\n//       background: #e6fffa;\n//       color: #234e52;\n//     }\n//     .btn-edit:hover {\n//       background: #b2f5ea;\n//     }\n//     .btn-delete {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .btn-delete:hover {\n//       background: #feb2b2;\n//     }\n//     .btn-success {\n//       background: #c6f6d5;\n//       color: #276749;\n//     }\n//     .btn-success:hover {\n//       background: #9ae6b4;\n//     }\n//     .btn-cancel {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .btn-cancel:hover {\n//       background: #feb2b2;\n//     }\n//     .edit-input,\n//     .edit-select {\n//       padding: 8px 12px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 6px;\n//       width: 100%;\n//       font-size: 0.9rem;\n//       box-sizing: border-box;\n//     }\n//     .edit-input:focus,\n//     .edit-select:focus {\n//       outline: none;\n//       border-color: #667eea;\n//     }\n//     .empty-state {\n//       text-align: center;\n//       padding: 40px;\n//       color: #a0aec0;\n//       font-style: italic;\n//     }\n//     @media (max-width: 1024px) {\n//       .form-grid-expanded {\n//         grid-template-columns: 1fr;\n//       }\n//       .users-grid {\n//         grid-template-columns: 1fr;\n//       }\n//     }\n//     @media (max-width: 768px) {\n//       .users-container {\n//         padding: 10px;\n//       }\n//       .users-title {\n//         font-size: 2rem;\n//       }\n//       .users-form-card,\n//       .users-list-card {\n//         padding: 20px;\n//       }\n//       .card-header {\n//         flex-direction: column;\n//         align-items: stretch;\n//       }\n//       .search-container {\n//         min-width: auto;\n//       }\n//       .modern-table {\n//         font-size: 0.85rem;\n//       }\n//       .modern-table th,\n//       .modern-table td {\n//         padding: 8px 6px;\n//       }\n//       .action-buttons {\n//         flex-direction: row;\n//       }\n//       .user-info {\n//         gap: 6px;\n//       }\n//     }\n//     @media (max-width: 480px) {\n//       .users-title {\n//         font-size: 1.75rem;\n//       }\n//       .card-title {\n//         font-size: 1.25rem;\n//       }\n//       .user-info {\n//         flex-direction: column;\n//         text-align: center;\n//         align-items: flex-start;\n//       }\n//       .avatar {\n//         width: 32px;\n//         height: 32px;\n//         font-size: 1rem;\n//       }\n//     }\n\n//   `}</style>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// for update 21/10\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { listUsers, addUser, updateUser, deleteUser } from \"../../services/mockApi\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { FiUserPlus } from \"react-icons/fi\";\n\n// const ROLES_KEY = \"user-management-roles\";\n// const DEPARTMENTS_KEY = \"user-management-departments\";\n\n// const defaultRoles = [\n//   \"Associate Developer\",\n//   \"Senior Associate Developer\",\n//   \"HR\",\n//   \"Administration\"\n// ];\n// const defaultDepartments = [\n//   \"Frontend\",\n//   \"Backend\",\n//   \"Marketing\",\n//   \"AI/ML\",\n//   \"DevOps\",\n//   \"Testing\",\n//   \"FlowTrack\",\n//   \"NetWork\",\n//   \"Hr\"\n// ];\n\n// function getStored(key, fallback) {\n//   const saved = localStorage.getItem(key);\n//   try {\n//     return saved ? JSON.parse(saved) : fallback;\n//   } catch {\n//     return fallback;\n//   }\n// }\n\n// function setStored(key, value) {\n//   localStorage.setItem(key, JSON.stringify(value));\n// }\n\n// // Inline style objects\n// const styles = {\n//   usersContainer: {\n//     minHeight: \"100vh\",\n//     background: \"#D8F7FA\",\n//     padding: 20,\n//     fontFamily: \"'Inter', Arial, sans-serif\"\n//   },\n//   usersHeader: {\n//     textAlign: \"center\",\n//     marginBottom: 40,\n//     color: \"#2d3748\"\n//   },\n//   usersTitle: {\n//     fontSize: \"2.5rem\",\n//     fontWeight: 700,\n//     marginBottom: 8\n//   },\n//   usersSubtitle: {\n//     fontSize: \"1.1rem\",\n//     opacity: 0.8,\n//     color: \"#4a5568\"\n//   },\n//   errorMessage: {\n//     color: \"#e53e3e\",\n//     background: \"#fed7d7\",\n//     padding: \"8px 15px\",\n//     borderRadius: 8,\n//     marginTop: 15,\n//     display: \"inline-block\",\n//     fontWeight: 500\n//   },\n//   successMessage: {\n//     color: \"#276749\",\n//     background: \"#c6f6d5\",\n//     padding: \"8px 15px\",\n//     borderRadius: 8,\n//     marginTop: 15,\n//     display: \"inline-block\",\n//     fontWeight: 500\n//   },\n//   usersGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"1fr\",\n//     gap: 30,\n//     maxWidth: 900,\n//     margin: \"0 auto\"\n//   },\n//   glassmorphism: {\n//     background: \"rgba(255,255,255,0.95)\",\n//     backdropFilter: \"blur(10px)\",\n//     borderRadius: 20,\n//     border: \"1px solid rgba(255,255,255,0.2)\",\n//     boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\n//   },\n//   formCard: {\n//     padding: 30\n//   },\n//   cardHeader: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     marginBottom: 30,\n//     flexWrap: \"wrap\",\n//     gap: 15\n//   },\n//   cardTitle: {\n//     fontSize: \"1.5rem\",\n//     fontWeight: 600,\n//     color: \"#2d3748\",\n//     display: \"flex\",\n//     alignItems: \"center\"\n//   },\n//   iconSpacing: {\n//     marginRight: 10\n//   },\n//   formGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"1fr 1fr\",\n//     gap: 20,\n//     marginBottom: 30\n//   },\n//   inputGroup: {\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   },\n//   inputLabel: {\n//     fontWeight: 500,\n//     marginBottom: 8,\n//     color: \"#4a5568\"\n//   },\n//   checkboxGroup: {},\n//   checkboxLabel: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     fontWeight: 400,\n//     color: \"#4a5568\",\n//     cursor: \"pointer\",\n//     padding: 10,\n//     borderRadius: 8\n//   },\n//   checkbox: {\n//     marginRight: 10,\n//     width: 18,\n//     height: 18,\n//     accentColor: \"#667eea\"\n//   },\n//   modernInput: {\n//     padding: \"12px 16px\",\n//     border: \"2px solid #e2e8f0\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     background: \"#D8F7FA\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//     transition: \"all 0.3s\"\n//   },\n//   modernSelect: {\n//     padding: \"12px 16px\",\n//     border: \"2px solid #e2e8f0\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     background: \"#D8F7FA\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//     transition: \"all 0.3s\"\n//   },\n//   createBtn: {\n//     gridColumn: \"1 / -1\",\n//     width: \"100%\",\n//     padding: 14,\n//     background: \"#4e54c8\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     fontWeight: 600,\n//     cursor: \"pointer\",\n//     transition: \"transform 0.2s\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\"\n//   }\n// };\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: \"\",\n//     email: \"\",\n//     role: defaultRoles[0],\n//     department: defaultDepartments[0],\n//     active: true,\n//     mobileNumber: \"\",\n//     passwordResetNeeded: false,\n//     profileFile: null,\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({});\n//   const [error, setError] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [roles, setRoles] = useState(getStored(ROLES_KEY, defaultRoles));\n//   const [departments, setDepartments] = useState(getStored(DEPARTMENTS_KEY, defaultDepartments));\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         setUsers(data);\n//       } catch (err) {\n//         setError(\"Failed to load users\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   useEffect(() => {\n//     setStored(ROLES_KEY, roles);\n//   }, [roles]);\n//   useEffect(() => {\n//     setStored(DEPARTMENTS_KEY, departments);\n//   }, [departments]);\n\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm((prev) => ({\n//       ...prev,\n//       [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\n//     }));\n//     setError(null);\n//     setSuccessMessage(null); // Clear success message on input change\n//   };\n\n//   const create = async () => {\n//     if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\n//       setError(\"First Name and Email are required.\");\n//       setSuccessMessage(null);\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: newUserForm.firstName.trim(),\n//         profileFile: newUserForm.profileFile\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n//           : null,\n//       };\n//       await addUser(newUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setNewUserForm(defaultNewUser);\n//       setError(null);\n//       setSuccessMessage(\"User added successfully!\"); // Show success message\n//     } catch (err) {\n//       setError(\"Failed to add user\");\n//       setSuccessMessage(null);\n//     }\n//   };\n\n//   // Responsive fix for single-column on mobile\n//   const formGridStyle = window.innerWidth <= 1024\n//     ? { ...styles.formGrid, gridTemplateColumns: \"1fr\" }\n//     : styles.formGrid;\n\n//   return (\n//     <div style={styles.usersContainer}>\n//       <div style={styles.usersHeader}>\n//         <h1 style={styles.usersTitle}>User Management</h1>\n//         <p style={styles.usersSubtitle}>Manage your users, roles, and departments</p>\n//       </div>\n//       <div style={styles.usersGrid}>\n//         <div style={{ ...styles.glassmorphism, ...styles.formCard }}>\n//           <div style={styles.cardHeader}>\n//             <h2 style={styles.cardTitle}>\n//               <span style={styles.iconSpacing}><FiUserPlus /></span>\n//               Profile\n//             </h2>\n//           </div>\n//           <div style={formGridStyle}>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"firstName\">Full Name</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"firstName\"\n//                 name=\"firstName\"\n//                 type=\"text\"\n//                 value={newUserForm.firstName}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"email\">Email</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"email\"\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={newUserForm.email}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"role\">Role</label>\n//               <select\n//                 style={styles.modernSelect}\n//                 id=\"role\"\n//                 name=\"role\"\n//                 value={newUserForm.role}\n//                 onChange={handleNewUserChange}\n//               >\n//                 {roles.map((r) => (\n//                   <option key={r} value={r}>{r}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"department\">Department</label>\n//               <select\n//                 style={styles.modernSelect}\n//                 id=\"department\"\n//                 name=\"department\"\n//                 value={newUserForm.department}\n//                 onChange={handleNewUserChange}\n//               >\n//                 {departments.map((d) => (\n//                   <option key={d} value={d}>{d}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"mobileNumber\">Mobile Number</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"mobileNumber\"\n//                 name=\"mobileNumber\"\n//                 type=\"tel\"\n//                 value={newUserForm.mobileNumber}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\n//               <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded\">\n//                 <input\n//                   id=\"passwordResetNeeded\"\n//                   name=\"passwordResetNeeded\"\n//                   type=\"checkbox\"\n//                   checked={newUserForm.passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                   style={styles.checkbox}\n//                 />\n//                 Password Reset Needed\n//               </label>\n//             </div>\n//           </div>\n//           {/* Submit Button added here */}\n//           <button style={styles.createBtn} onClick={create}>\n//             Submit\n//           </button>\n//           {error && (\n//             <p style={styles.errorMessage}>{error}</p>\n//           )}\n//           {successMessage && (\n//             <p style={styles.successMessage}>{successMessage}</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// \n\n\nimport React, { useEffect, useState } from \"react\";\nimport { listUsers, addUser, updateUser, deleteUser } from \"../../services/userApi\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FiUserPlus } from \"react-icons/fi\";\n\n\nconst ROLES_KEY = \"user-management-roles\";\nconst DEPARTMENTS_KEY = \"user-management-departments\";\n\n\nconst defaultRoles = [\n  \"Associate Developer\",\n  \"Senior Associate Developer\",\n  \"HR\",\n  \"Administration\"\n];\nconst defaultDepartments = [\n  \"Frontend\",\n  \"Backend\",\n  \"Marketing\",\n  \"AI/ML\",\n  \"DevOps\",\n  \"Testing\",\n  \"FlowTrack\",\n  \"NetWork\",\n  \"Hr\"\n];\n\n\nfunction getStored(key, fallback) {\n  const saved = localStorage.getItem(key);\n  try {\n    return saved ? JSON.parse(saved) : fallback;\n  } catch {\n    return fallback;\n  }\n}\n\n\nfunction setStored(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\n\n// Inline style objects\nconst styles = {\n  usersContainer: {\n    minHeight: \"100vh\",\n    background: \"#D8F7FA\",\n    padding: 20,\n    fontFamily: \"'Inter', Arial, sans-serif\"\n  },\n  usersHeader: {\n    textAlign: \"center\",\n    marginBottom: 40,\n    color: \"#2d3748\"\n  },\n  usersTitle: {\n    fontSize: \"2.5rem\",\n    fontWeight: 700,\n    marginBottom: 8\n  },\n  usersSubtitle: {\n    fontSize: \"1.1rem\",\n    opacity: 0.8,\n    color: \"#4a5568\"\n  },\n  errorMessage: {\n    color: \"#e53e3e\",\n    background: \"#fed7d7\",\n    padding: \"8px 15px\",\n    borderRadius: 8,\n    marginTop: 15,\n    display: \"inline-block\",\n    fontWeight: 500\n  },\n  successMessage: {\n    color: \"#276749\",\n    background: \"#c6f6d5\",\n    padding: \"8px 15px\",\n    borderRadius: 8,\n    marginTop: 15,\n    display: \"inline-block\",\n    fontWeight: 500\n  },\n  usersGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gap: 30,\n    maxWidth: 900,\n    margin: \"0 auto\"\n  },\n  glassmorphism: {\n    background: \"rgba(255,255,255,0.95)\",\n    backdropFilter: \"blur(10px)\",\n    borderRadius: 20,\n    border: \"1px solid rgba(255,255,255,0.2)\",\n    boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\n  },\n  formCard: {\n    padding: 30\n  },\n  cardHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    flexWrap: \"wrap\",\n    gap: 15\n  },\n  cardTitle: {\n    fontSize: \"1.5rem\",\n    fontWeight: 600,\n    color: \"#2d3748\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  iconSpacing: {\n    marginRight: 10\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gap: 20,\n    marginBottom: 30\n  },\n  inputGroup: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  inputLabel: {\n    fontWeight: 500,\n    marginBottom: 8,\n    color: \"#4a5568\"\n  },\n  checkboxGroup: {},\n  checkboxLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n    fontWeight: 400,\n    color: \"#4a5568\",\n    cursor: \"pointer\",\n    padding: 10,\n    borderRadius: 8\n  },\n  checkbox: {\n    marginRight: 10,\n    width: 18,\n    height: 18,\n    accentColor: \"#667eea\"\n  },\n  modernInput: {\n    padding: \"12px 16px\",\n    border: \"2px solid #e2e8f0\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    background: \"#D8F7FA\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    transition: \"all 0.3s\"\n  },\n  modernSelect: {\n    padding: \"12px 16px\",\n    border: \"2px solid #e2e8f0\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    background: \"#D8F7FA\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    transition: \"all 0.3s\"\n  },\n  createBtn: {\n    gridColumn: \"1 / -1\",\n    width: \"100%\",\n    padding: 14,\n    background: \"#4e54c8\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    fontWeight: 600,\n    cursor: \"pointer\",\n    transition: \"transform 0.2s\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\n\n\nexport default function Users() {\n  const defaultNewUser = {\n    firstName: \"\",\n    email: \"\",\n    role: defaultRoles[0],\n    department: defaultDepartments[0],\n    active: true,\n    mobileNumber: \"\",\n    passwordResetNeeded: false,\n    profileFile: null,\n  };\n\n\n  const [users, setUsers] = useState([]);\n  const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n  const [editingId, setEditingId] = useState(null);\n  const [editForm, setEditForm] = useState({});\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [roles, setRoles] = useState(defaultRoles);\n  const [departments, setDepartments] = useState(defaultDepartments);\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await listUsers();\n        setUsers(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching users:', err);\n        setError(err.message || \"Failed to load users\");\n      }\n    };\n    fetchUsers();\n  }, []);\n\n\n  useEffect(() => {\n    setStored(ROLES_KEY, roles);\n  }, [roles]);\n  useEffect(() => {\n    setStored(DEPARTMENTS_KEY, departments);\n  }, [departments]);\n\n\n  const handleNewUserChange = (e) => {\n    const { name, value, type, checked, files } = e.target;\n    setNewUserForm((prev) => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\n    }));\n    setError(null);\n    setSuccessMessage(null); // Clear success message on input change\n  };\n\n\n  const create = async () => {\n    if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\n      setError(\"First Name and Email are required.\");\n      setSuccessMessage(null);\n      return;\n    }\n    try {\n      const newUser = {\n        ...newUserForm,\n        name: newUserForm.firstName.trim(),\n        profileFile: newUserForm.profileFile\n          ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n          : null,\n      };\n      await addUser(newUser);\n      const updatedUsers = await listUsers();\n      setUsers(updatedUsers);\n      setNewUserForm(defaultNewUser);\n      setError(null);\n      setSuccessMessage(\"User added successfully!\"); // Show success message\n    } catch (err) {\n      console.error('Error creating user:', err);\n      setError(err.message || \"Failed to add user\");\n      setSuccessMessage(null);\n    }\n  };\n\n\n  // Responsive fix for single-column on mobile\n  const formGridStyle = window.innerWidth <= 1024\n    ? { ...styles.formGrid, gridTemplateColumns: \"1fr\" }\n    : styles.formGrid;\n\n\n  return (\n    <div style={styles.usersContainer}>\n      <div style={styles.usersHeader}>\n        <h1 style={styles.usersTitle}>User Management</h1>\n        <p style={styles.usersSubtitle}>Manage your users, roles, and departments</p>\n      </div>\n      <div style={styles.usersGrid}>\n        <div style={{ ...styles.glassmorphism, ...styles.formCard }}>\n          <div style={styles.cardHeader}>\n            <h2 style={styles.cardTitle}>\n              <span style={styles.iconSpacing}><FiUserPlus /></span>\n              Profile\n            </h2>\n          </div>\n          <div style={formGridStyle}>\n            <div style={styles.inputGroup}>\n              <label style={styles.inputLabel} htmlFor=\"firstName\">Full Name</label>\n              <input\n                style={styles.modernInput}\n                id=\"firstName\"\n                name=\"firstName\"\n                type=\"text\"\n                value={newUserForm.firstName}\n                onChange={handleNewUserChange}\n              />\n            </div>\n            <div style={styles.inputGroup}>\n              <label style={styles.inputLabel} htmlFor=\"email\">Email</label>\n              <input\n                style={styles.modernInput}\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                value={newUserForm.email}\n                onChange={handleNewUserChange}\n              />\n            </div>\n            <div style={styles.inputGroup}>\n              <label style={styles.inputLabel} htmlFor=\"role\">Role</label>\n              <select\n                style={styles.modernSelect}\n                id=\"role\"\n                name=\"role\"\n                value={newUserForm.role}\n                onChange={handleNewUserChange}\n              >\n                {roles.map((r) => (\n                  <option key={r} value={r}>{r}</option>\n                ))}\n              </select>\n            </div>\n            <div style={styles.inputGroup}>\n              <label style={styles.inputLabel} htmlFor=\"department\">Department</label>\n              <select\n                style={styles.modernSelect}\n                id=\"department\"\n                name=\"department\"\n                value={newUserForm.department}\n                onChange={handleNewUserChange}\n              >\n                {departments.map((d) => (\n                  <option key={d} value={d}>{d}</option>\n                ))}\n              </select>\n            </div>\n            <div style={styles.inputGroup}>\n              <label style={styles.inputLabel} htmlFor=\"mobileNumber\">Mobile Number</label>\n              <input\n                style={styles.modernInput}\n                id=\"mobileNumber\"\n                name=\"mobileNumber\"\n                type=\"tel\"\n                value={newUserForm.mobileNumber}\n                onChange={handleNewUserChange}\n              />\n            </div>\n            <div style={styles.inputGroup}>\n              <label style={styles.inputLabel} htmlFor=\"dateOfBirth\">Date of Birth</label>\n              <input\n                style={styles.modernInput}\n                id=\"dateOfBirth\"\n                name=\"dateOfBirth\"\n                type=\"date\"\n                value={newUserForm.dateOfBirth}\n                onChange={handleNewUserChange}\n              />\n            </div>\n            <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\n              <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded\">\n                <input\n                  id=\"passwordResetNeeded\"\n                  name=\"passwordResetNeeded\"\n                  type=\"checkbox\"\n                  checked={newUserForm.passwordResetNeeded}\n                  onChange={handleNewUserChange}\n                  style={styles.checkbox}\n                />\n                Password Reset Needed\n              </label>\n            </div>\n          </div>\n          {/* Submit Button added here */}\n          <button style={styles.createBtn} onClick={create}>\n            Submit\n          </button>\n          {error && (\n            <p style={styles.errorMessage}>{error}</p>\n          )}\n          {successMessage && (\n            <p style={styles.successMessage}>{successMessage}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n\n"],"mappings":";;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}