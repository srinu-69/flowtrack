{"ast":null,"code":"const API_URL = \"http://localhost:8000\"; // FastAPI backend base URL\n\n// Map backend status -> frontend status\nconst mapStatusOut = s => {\n  var _m$s;\n  if (!s) return s;\n  const m = {\n    Open: \"active\",\n    Assigned: \"maintenance\",\n    Closed: \"inactive\"\n  };\n  return (_m$s = m[s]) !== null && _m$s !== void 0 ? _m$s : String(s).toLowerCase();\n};\n\n// Map frontend status -> backend status\nconst mapStatusIn = s => {\n  var _m$s2;\n  if (!s) return s;\n  const m = {\n    active: \"Open\",\n    maintenance: \"Assigned\",\n    inactive: \"Closed\"\n  };\n  return (_m$s2 = m[s]) !== null && _m$s2 !== void 0 ? _m$s2 : s;\n};\nconst mapOut = item => {\n  if (!item) return item;\n  return {\n    ...item,\n    status: mapStatusOut(item.status)\n  };\n};\nexport async function listAssets() {\n  const res = await fetch(`${API_URL}/assets`);\n  if (!res.ok) throw new Error(\"Failed to fetch assets\");\n  const data = await res.json();\n\n  // Backend may return either an array or an envelope { value: [...] }\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && Array.isArray(data.value)) return data.value.map(mapOut);\n  // fallback: try common shapes\n  if (data && Array.isArray(data.items)) return data.items.map(mapOut);\n  return [];\n}\nexport async function addAsset(asset) {\n  // Send only the fields the backend schema expects (frontend status values)\n  const toSend = {\n    email: asset.email,\n    type: asset.type,\n    location: asset.location,\n    status: asset.status,\n    description: asset.description\n  };\n  const res = await fetch(`${API_URL}/assets`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(toSend)\n  });\n  if (!res.ok) throw new Error(\"Failed to add asset\");\n  const data = await res.json();\n  // normalize returned asset(s)\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && data.value) return data.value.map(mapOut);\n  if (data && data.id) return mapOut(data);\n  return data;\n}\nexport async function deleteAsset(id) {\n  const res = await fetch(`${API_URL}/assets/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) throw new Error(\"Failed to delete asset\");\n  const data = await res.json();\n  return data;\n}","map":{"version":3,"names":["API_URL","mapStatusOut","s","_m$s","m","Open","Assigned","Closed","String","toLowerCase","mapStatusIn","_m$s2","active","maintenance","inactive","mapOut","item","status","listAssets","res","fetch","ok","Error","data","json","Array","isArray","map","value","items","addAsset","asset","toSend","email","type","location","description","method","headers","body","JSON","stringify","id","deleteAsset"],"sources":["C:/Users/hussa/Desktop/flowtrack/frontend/src/components/assetsApi.js"],"sourcesContent":["const API_URL = \"http://localhost:8000\"; // FastAPI backend base URL\n\n// Map backend status -> frontend status\nconst mapStatusOut = (s) => {\n  if (!s) return s;\n  const m = {\n    Open: \"active\",\n    Assigned: \"maintenance\",\n    Closed: \"inactive\",\n  };\n  return m[s] ?? String(s).toLowerCase();\n};\n\n// Map frontend status -> backend status\nconst mapStatusIn = (s) => {\n  if (!s) return s;\n  const m = {\n    active: \"Open\",\n    maintenance: \"Assigned\",\n    inactive: \"Closed\",\n  };\n  return m[s] ?? s;\n};\n\nconst mapOut = (item) => {\n  if (!item) return item;\n  return {\n    ...item,\n    status: mapStatusOut(item.status),\n  };\n};\n\nexport async function listAssets() {\n  const res = await fetch(`${API_URL}/assets`);\n  if (!res.ok) throw new Error(\"Failed to fetch assets\");\n  const data = await res.json();\n\n  // Backend may return either an array or an envelope { value: [...] }\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && Array.isArray(data.value)) return data.value.map(mapOut);\n  // fallback: try common shapes\n  if (data && Array.isArray(data.items)) return data.items.map(mapOut);\n  return [];\n}\n\nexport async function addAsset(asset) {\n  // Send only the fields the backend schema expects (frontend status values)\n  const toSend = {\n    email: asset.email,\n    type: asset.type,\n    location: asset.location,\n    status: asset.status,\n    description: asset.description,\n  };\n\n  const res = await fetch(`${API_URL}/assets`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(toSend),\n  });\n  if (!res.ok) throw new Error(\"Failed to add asset\");\n  const data = await res.json();\n  // normalize returned asset(s)\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && data.value) return data.value.map(mapOut);\n  if (data && data.id) return mapOut(data);\n  return data;\n}\n\nexport async function deleteAsset(id) {\n  const res = await fetch(`${API_URL}/assets/${id}`, {\n    method: \"DELETE\",\n  });\n  if (!res.ok) throw new Error(\"Failed to delete asset\");\n  const data = await res.json();\n  return data;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}