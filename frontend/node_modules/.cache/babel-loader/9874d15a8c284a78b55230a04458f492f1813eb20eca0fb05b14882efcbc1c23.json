{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hussa\\\\Desktop\\\\flowtrack\\\\frontend\\\\src\\\\components\\\\assets\\\\Assets.js\",\n  _s = $RefreshSig$();\n// ffull code ok\n\n// import React, { useEffect, useState } from \"react\";\n\n// // Mock API functions\n// const mockAssets = [\n//   {\n//     id: \"1\",\n//     email: \"john@example.com\",\n//     type: \"Laptop\",\n//     location: \"WFO\",\n//     status: \"active\",\n//     openDate: new Date().toISOString(),\n//   },\n//   {\n//     id: \"2\",\n//     email: \"user2@example.com\",\n//     type: \"Charger\",\n//     location: \"WFO\",\n//     status: \"maintenance\",\n//     openDate: new Date().toISOString(),\n//   },\n//   {\n//     id: \"3\",\n//     email: \"user3@example.com\",\n//     type: \"Network Issue\",\n//     location: \"WFO\",\n//     status: \"inactive\",\n//     openDate: new Date().toISOString(),\n//   },\n// ];\n\n// let assetsDB = [...mockAssets];\n\n// const listAssets = () => Promise.resolve([...assetsDB]);\n// const addAsset = (asset) => {\n//   assetsDB.push(asset);\n//   return Promise.resolve(asset);\n// };\n\n// const generateId = () =>\n//   `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n// // Helper function to format date/time for display\n// function formatOpenDate(dt) {\n//   if (!dt) return \"\";\n//   const d = new Date(dt);\n//   return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\n// }\n\n// export default function AssetsBoard() {\n//   const [assets, setAssets] = useState([]);\n//   const [email, setEmail] = useState(\"\");\n//   const [type, setType] = useState(\"Laptop\");\n//   const [location, setLocation] = useState(\"WFO\");\n//   const [editingId, setEditingId] = useState(null);\n//   const [editFields, setEditFields] = useState({});\n//   const [hoveredId, setHoveredId] = useState(null);\n//   const [quickAdd, setQuickAdd] = useState({});\n//   const [draggedAsset, setDraggedAsset] = useState(null);\n\n//   useEffect(() => {\n//     listAssets().then(setAssets);\n//   }, []);\n\n//   const add = async (status = \"active\") => {\n//     const assetEmail = status === \"form\" ? email : quickAdd[status]?.email;\n//     const assetType =\n//       status === \"form\" ? type : quickAdd[status]?.type || \"Laptop\";\n//     const assetLocation =\n//       status === \"form\" ? location : quickAdd[status]?.location || \"WFO\";\n//     if (!assetEmail?.trim()) return;\n\n//     const a = {\n//       id: generateId(),\n//       email: assetEmail,\n//       type: assetType,\n//       location: assetLocation,\n//       status: status === \"form\" ? \"active\" : status,\n//       openDate: new Date().toISOString(), // Save open date/time\n//     };\n//     await addAsset(a);\n//     setAssets(await listAssets());\n\n//     if (status === \"form\") {\n//       setEmail(\"\");\n//       setType(\"Laptop\");\n//       setLocation(\"WFO\");\n//     } else {\n//       setQuickAdd((prev) => ({\n//         ...prev,\n//         [status]: { email: \"\", type: \"Laptop\", location: \"WFO\" },\n//       }));\n//     }\n//   };\n\n//   const statusColumns = {\n//     active: { title: \"Active\", color: \"#22C55E\", bgColor: \"#C8E9DD\" },\n//     // maintenance: { title: \"Maintenance\", color: \"#EAB308\", bgColor: \"#FEF3C7\" },\n//     // inactive: { title: \"Inactive\", color: \"#EF4444\", bgColor: \"#FECACA\" },\n//   };\n\n//   const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n//     acc[status] = assets.filter((a) => a.status === status);\n//     return acc;\n//   }, {});\n\n//   const handleDragStart = (e, asset) => {\n//     setDraggedAsset(asset);\n//     e.dataTransfer.effectAllowed = \"move\";\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//     e.dataTransfer.dropEffect = \"move\";\n//   };\n\n//   const handleDrop = (e, newStatus) => {\n//     e.preventDefault();\n//     if (draggedAsset && draggedAsset.status !== newStatus) {\n//       const updatedAsset = { ...draggedAsset, status: newStatus };\n//       setAssets(assets.map((a) => (a.id === draggedAsset.id ? updatedAsset : a)));\n//     }\n//     setDraggedAsset(null);\n//   };\n\n//   const startEditing = (asset) => {\n//     setEditingId(asset.id);\n//     setEditFields({ ...asset });\n//   };\n\n//   const saveEdit = (id) => {\n//     setAssets(\n//       assets.map((a) => (a.id === id ? { ...a, ...editFields } : a))\n//     );\n//     setEditingId(null);\n//   };\n\n//   const cancelEdit = () => setEditingId(null);\n//   const deleteAsset = (id) => setAssets(assets.filter((a) => a.id !== id));\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"2rem\",\n//         fontFamily: \"Arial, sans-serif\",\n//         background: \"#D0F0F4\",\n//         minHeight: \"100vh\",\n//       }}\n//     >\n//       {/* Header */}\n//       <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n//         <h1\n//           style={{\n//             fontSize: \"2rem\",\n//             fontWeight: \"bold\",\n//             margin: 0,\n//             letterSpacing: \"2px\",\n//           }}\n//         >\n//           FLOW TRACK\n//         </h1>\n//       </div>\n\n//       {/* Add Asset Top Form */}\n//       <div\n//         style={{\n//           marginBottom: \"2rem\",\n//           background: \"#fff\",\n//           padding: \"1.5rem\",\n//           borderRadius: \"8px\",\n//           boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n//         }}\n//       >\n//         <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\" }}>Add Asset</h2>\n//         <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n//           <input\n//             placeholder=\"Email ID\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               borderRadius: \"4px\",\n//               border: \"1px solid #ccc\",\n//             }}\n//           />\n//           <select\n//             value={type}\n//             onChange={(e) => setType(e.target.value)}\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               borderRadius: \"4px\",\n//               border: \"1px solid #ccc\",\n//             }}\n//           >\n//             <option>Laptop</option>\n//             <option>Charger</option>\n//             <option>Network Issue</option>\n//           </select>\n//           <select\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               borderRadius: \"4px\",\n//               border: \"1px solid #ccc\",\n//             }}\n//           >\n//             <option>WFO</option>\n//             <option>WFH</option>\n//           </select>\n//           <button\n//             onClick={() => add(\"form\")}\n//             style={{\n//               padding: \"0.5rem 1rem\",\n//               background: \"#0052CC\",\n//               color: \"#fff\",\n//               border: \"none\",\n//               borderRadius: \"4px\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Kanban Board */}\n//       <div style={{ display: \"flex\", gap: \"1.5rem\" }}>\n//         {Object.keys(statusColumns).map((status) => (\n//           <div\n//             key={status}\n//             onDragOver={handleDragOver}\n//             onDrop={(e) => handleDrop(e, status)}\n//             style={{\n//               flex: 1,\n//               background: statusColumns[status].bgColor,\n//               padding: \"1.5rem\",\n//               borderRadius: \"12px\",\n//               minHeight: \"400px\",\n//             }}\n//           >\n//             <h3\n//               style={{\n//                 color: statusColumns[status].color,\n//                 fontSize: \"1.25rem\",\n//                 fontWeight: \"bold\",\n//                 marginBottom: \"1rem\",\n//                 textAlign: \"center\",\n//               }}\n//             >\n//               {statusColumns[status].title}\n//             </h3>\n\n//             {/* Assets */}\n//             {groupedAssets[status].map((a) => (\n//               <div\n//                 key={a.id}\n//                 draggable={editingId !== a.id}\n//                 onDragStart={(e) => handleDragStart(e, a)}\n//                 onMouseEnter={() => setHoveredId(a.id)}\n//                 onMouseLeave={() => setHoveredId(null)}\n//                 style={{\n//                   padding: \"1rem\",\n//                   marginBottom: \"0.75rem\",\n//                   borderRadius: \"8px\",\n//                   background: statusColumns[status].color,\n//                   color: \"#fff\",\n//                   fontWeight: \"600\",\n//                   boxShadow:\n//                     draggedAsset?.id === a.id\n//                       ? \"0 4px 12px rgba(0,0,0,0.2)\"\n//                       : \"0 2px 4px rgba(0,0,0,0.1)\",\n//                   position: \"relative\",\n//                   cursor: editingId === a.id ? \"default\" : \"move\",\n//                   opacity: draggedAsset?.id === a.id ? 0.5 : 1,\n//                 }}\n//               >\n//                 {editingId === a.id ? (\n//                   <div\n//                     style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.5rem\" }}\n//                   >\n//                     <input\n//                       value={editFields.email}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, email: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     />\n//                     <select\n//                       value={editFields.type}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, type: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     >\n//                       <option>Laptop</option>\n//                       <option>Charger</option>\n//                       <option>Network Issue</option>\n//                     </select>\n//                     <select\n//                       value={editFields.location}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, location: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     >\n//                       <option>WFH</option>\n//                       <option>WFO</option>\n//                     </select>\n//                     <select\n//                       value={editFields.status}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, status: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     >\n//                       {Object.keys(statusColumns).map((s) => (\n//                         <option key={s} value={s}>\n//                           {statusColumns[s].title}\n//                         </option>\n//                       ))}\n//                     </select>\n//                     {/* Open Date/Time field visible in edit mode */}\n//                     <div\n//                       style={{\n//                         fontSize: \"0.85rem\",\n//                         color: \"#e6ffe6\",\n//                         margin: \"0.25rem 0\",\n//                         fontWeight: 400,\n//                         opacity: 0.95,\n//                       }}\n//                     >\n//                       Opened: {formatOpenDate(editFields.openDate)}\n//                     </div>\n//                     <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n//                       <button\n//                         onClick={() => saveEdit(a.id)}\n//                         style={{\n//                           background: \"#36B37E\",\n//                           color: \"#fff\",\n//                           border: \"none\",\n//                           borderRadius: \"4px\",\n//                           padding: \"0.5rem\",\n//                           flex: 1,\n//                           cursor: \"pointer\",\n//                         }}\n//                       >\n//                         Save\n//                       </button>\n//                       <button\n//                         onClick={cancelEdit}\n//                         style={{\n//                           background: \"#DE350B\",\n//                           color: \"#fff\",\n//                           border: \"none\",\n//                           borderRadius: \"4px\",\n//                           padding: \"0.5rem\",\n//                           flex: 1,\n//                           cursor: \"pointer\",\n//                         }}\n//                       >\n//                         Cancel\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ) : (\n//                   <div onClick={() => startEditing(a)} style={{ cursor: \"pointer\" }}>\n//                     <div style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>{a.email}</div>\n//                     <div\n//                       style={{\n//                         fontSize: \"0.8rem\",\n//                         marginTop: \"0.25rem\",\n//                         opacity: 0.9,\n//                       }}\n//                     >\n//                       {a.type} | {a.location}\n//                     </div>\n//                     {/* Open Date/Time Display */}\n//                     <div\n//                       style={{\n//                         fontSize: \"0.85rem\",\n//                         color: \"#e6ffe6\",\n//                         marginTop: \"0.25rem\",\n//                         fontWeight: 400,\n//                         opacity: 0.95,\n//                       }}\n//                     >\n//                       Opened: {formatOpenDate(a.openDate)}\n//                     </div>\n//                   </div>\n//                 )}\n\n//                 {/* Hover Toolbar */}\n//                 {hoveredId === a.id && editingId !== a.id && (\n//                   <div\n//                     style={{\n//                       position: \"absolute\",\n//                       top: \"4px\",\n//                       right: \"4px\",\n//                       display: \"flex\",\n//                       gap: \"0.5rem\",\n//                     }}\n//                   >\n//                     <button\n//                       onClick={(e) => {\n//                         e.stopPropagation();\n//                         startEditing(a);\n//                       }}\n//                       style={{\n//                         background: \"rgba(255,255,255,0.9)\",\n//                         border: \"none\",\n//                         color: \"#0052CC\",\n//                         cursor: \"pointer\",\n//                         fontWeight: \"bold\",\n//                         padding: \"0.25rem 0.5rem\",\n//                         borderRadius: \"4px\",\n//                       }}\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       onClick={(e) => {\n//                         e.stopPropagation();\n//                         deleteAsset(a.id);\n//                       }}\n//                       style={{\n//                         background: \"rgba(255,255,255,0.9)\",\n//                         border: \"none\",\n//                         color: \"#DE350B\",\n//                         cursor: \"pointer\",\n//                         fontWeight: \"bold\",\n//                         padding: \"0.25rem 0.5rem\",\n//                         borderRadius: \"4px\",\n//                       }}\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n\n//             {/* Quick Add in Column */}\n//             <div\n//               style={{\n//                 marginTop: \"0.75rem\",\n//                 display: \"flex\",\n//                 flexDirection: \"column\",\n//                 gap: \"0.5rem\",\n//               }}\n//             ></div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// for more updates\n\nimport React, { useEffect, useState } from \"react\";\nimport assetsApi from \"../../services/assetsApi\";\n\n// NOTE: component expects backend fields; assetsApi maps open_date -> openDate\n\n// Mock fallback (used only if API fails)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockAssets = [{\n  id: \"1\",\n  email: \"john@example.com\",\n  type: \"Laptop\",\n  location: \"WFO\",\n  status: \"active\",\n  openDate: new Date().toISOString()\n}, {\n  id: \"2\",\n  email: \"user2@example.com\",\n  type: \"Charger\",\n  location: \"WFO\",\n  status: \"maintenance\",\n  openDate: new Date().toISOString()\n}, {\n  id: \"3\",\n  email: \"user3@example.com\",\n  type: \"Network Issue\",\n  location: \"WFO\",\n  status: \"inactive\",\n  openDate: new Date().toISOString()\n}];\nlet assetsDB = [...mockAssets];\nconst generateId = () => `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n// Helper function to format date/time for display\nfunction formatOpenDate(dt) {\n  if (!dt) return \"\";\n  const d = new Date(dt);\n  return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\n}\nexport default function AssetsBoard() {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [type, setType] = useState(\"Laptop\");\n  const [location, setLocation] = useState(\"WFO\");\n  const [editingId, setEditingId] = useState(null);\n  const [editFields, setEditFields] = useState({});\n  const [hoveredId, setHoveredId] = useState(null);\n  const [quickAdd, setQuickAdd] = useState({});\n  const [draggedAsset, setDraggedAsset] = useState(null);\n  useEffect(() => {\n    let mounted = true;\n    async function load() {\n      try {\n        const rows = await assetsApi.listAssets();\n        if (mounted) setAssets(rows);\n      } catch (err) {\n        // fallback to mock data\n        console.error(\"Failed to load assets from API, using mock\", err);\n        setAssets([...assetsDB]);\n      }\n    }\n    load();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const add = async (status = \"active\") => {\n    var _quickAdd$status, _quickAdd$status2, _quickAdd$status3;\n    const assetEmail = status === \"form\" ? email : (_quickAdd$status = quickAdd[status]) === null || _quickAdd$status === void 0 ? void 0 : _quickAdd$status.email;\n    const assetType = status === \"form\" ? type : ((_quickAdd$status2 = quickAdd[status]) === null || _quickAdd$status2 === void 0 ? void 0 : _quickAdd$status2.type) || \"Laptop\";\n    const assetLocation = status === \"form\" ? location : ((_quickAdd$status3 = quickAdd[status]) === null || _quickAdd$status3 === void 0 ? void 0 : _quickAdd$status3.location) || \"WFO\";\n    if (!(assetEmail !== null && assetEmail !== void 0 && assetEmail.trim())) return;\n    const a = {\n      // id assigned by backend; keep a temporary id so UI is responsive\n      id: generateId(),\n      email: assetEmail,\n      type: assetType,\n      location: assetLocation,\n      status: status === \"form\" ? \"active\" : status,\n      openDate: new Date().toISOString() // client-side display field\n    };\n    try {\n      const created = await assetsApi.createAsset(a);\n      // replace/append created item\n      setAssets(prev => [created, ...prev]);\n    } catch (err) {\n      console.error(\"createAsset failed, falling back to mock\", err);\n      await (async () => {\n        assetsDB.push(a);\n        setAssets([...assetsDB]);\n      })();\n    }\n    if (status === \"form\") {\n      setEmail(\"\");\n      setType(\"Laptop\");\n      setLocation(\"WFO\");\n    } else {\n      setQuickAdd(prev => ({\n        ...prev,\n        [status]: {\n          email: \"\",\n          type: \"Laptop\",\n          location: \"WFO\"\n        }\n      }));\n    }\n  };\n  const statusColumns = {\n    active: {\n      title: \"Active\",\n      color: \"#22C55E\",\n      bgColor: \"#C8E9DD\"\n    }\n    // maintenance: { title: \"Maintenance\", color: \"#EAB308\", bgColor: \"#FEF3C7\" },\n    // inactive: { title: \"Inactive\", color: \"#EF4444\", bgColor: \"#FECACA\" },\n  };\n  const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n    acc[status] = assets.filter(a => a.status === status);\n    return acc;\n  }, {});\n  const handleDragStart = (e, asset) => {\n    setDraggedAsset(asset);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n  };\n  const handleDrop = async (e, newStatus) => {\n    e.preventDefault();\n    if (draggedAsset && draggedAsset.status !== newStatus) {\n      const updatedAsset = {\n        ...draggedAsset,\n        status: newStatus\n      };\n      // optimistic update\n      setAssets(prev => prev.map(a => a.id === draggedAsset.id ? updatedAsset : a));\n      try {\n        await assetsApi.updateAsset(draggedAsset.id, {\n          status: newStatus\n        });\n      } catch (err) {\n        console.error(\"Failed to update asset status\", err);\n        // revert on failure\n        setAssets(prev => prev.map(a => a.id === draggedAsset.id ? draggedAsset : a));\n      }\n    }\n    setDraggedAsset(null);\n  };\n  const startEditing = asset => {\n    setEditingId(asset.id);\n    setEditFields({\n      ...asset\n    });\n  };\n  const saveEdit = async id => {\n    const patch = {\n      ...editFields\n    };\n    // optimistic update\n    const before = assets.find(a => a.id === id);\n    setAssets(prev => prev.map(a => a.id === id ? {\n      ...a,\n      ...patch\n    } : a));\n    setEditingId(null);\n    try {\n      const updated = await assetsApi.updateAsset(id, patch);\n      setAssets(prev => prev.map(a => a.id === id ? updated : a));\n    } catch (err) {\n      console.error(\"Failed to save edit\", err);\n      // revert\n      setAssets(prev => prev.map(a => a.id === id ? before : a));\n    }\n  };\n  const cancelEdit = () => setEditingId(null);\n  const deleteAsset = async id => {\n    const before = assets;\n    setAssets(prev => prev.filter(a => a.id !== id));\n    try {\n      await assetsApi.deleteAsset(id);\n    } catch (err) {\n      console.error(\"Failed to delete asset\", err);\n      setAssets(before);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial, sans-serif\",\n      background: \"#D0F0F4\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"2rem\",\n          fontWeight: \"bold\",\n          margin: 0,\n          letterSpacing: \"2px\"\n        },\n        children: \"FLOW TRACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2rem\",\n        background: \"#fff\",\n        padding: \"1.5rem\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          fontSize: \"1.5rem\"\n        },\n        children: \"Add Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"1rem\",\n          flexWrap: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email ID\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          style: {\n            flex: 1,\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          style: {\n            flex: 1,\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Laptop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Charger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Network Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          style: {\n            flex: 1,\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"WFO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"WFH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => add(\"form\"),\n          style: {\n            padding: \"0.5rem 1rem\",\n            background: \"#0052CC\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1.5rem\"\n      },\n      children: Object.keys(statusColumns).map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, status),\n        style: {\n          flex: 1,\n          background: statusColumns[status].bgColor,\n          padding: \"1.5rem\",\n          borderRadius: \"12px\",\n          minHeight: \"400px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: statusColumns[status].color,\n            fontSize: \"1.25rem\",\n            fontWeight: \"bold\",\n            marginBottom: \"1rem\",\n            textAlign: \"center\"\n          },\n          children: statusColumns[status].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 13\n        }, this), groupedAssets[status].map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: editingId !== a.id,\n          onDragStart: e => handleDragStart(e, a),\n          onMouseEnter: () => setHoveredId(a.id),\n          onMouseLeave: () => setHoveredId(null),\n          style: {\n            padding: \"1rem\",\n            marginBottom: \"0.75rem\",\n            borderRadius: \"8px\",\n            background: statusColumns[status].color,\n            color: \"#fff\",\n            fontWeight: \"600\",\n            boxShadow: (draggedAsset === null || draggedAsset === void 0 ? void 0 : draggedAsset.id) === a.id ? \"0 4px 12px rgba(0,0,0,0.2)\" : \"0 2px 4px rgba(0,0,0,0.1)\",\n            position: \"relative\",\n            cursor: editingId === a.id ? \"default\" : \"move\",\n            opacity: (draggedAsset === null || draggedAsset === void 0 ? void 0 : draggedAsset.id) === a.id ? 0.5 : 1\n          },\n          children: [editingId === a.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"0.5rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: editFields.email,\n              onChange: e => setEditFields({\n                ...editFields,\n                email: e.target.value\n              }),\n              style: {\n                padding: \"0.5rem\",\n                borderRadius: \"4px\",\n                border: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editFields.type,\n              onChange: e => setEditFields({\n                ...editFields,\n                type: e.target.value\n              }),\n              style: {\n                padding: \"0.5rem\",\n                borderRadius: \"4px\",\n                border: \"none\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Laptop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Charger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Network Issue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editFields.location,\n              onChange: e => setEditFields({\n                ...editFields,\n                location: e.target.value\n              }),\n              style: {\n                padding: \"0.5rem\",\n                borderRadius: \"4px\",\n                border: \"none\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"WFH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"WFO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editFields.status,\n              onChange: e => setEditFields({\n                ...editFields,\n                status: e.target.value\n              }),\n              style: {\n                padding: \"0.5rem\",\n                borderRadius: \"4px\",\n                border: \"none\"\n              },\n              children: Object.keys(statusColumns).map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: s,\n                children: statusColumns[s].title\n              }, s, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"0.85rem\",\n                color: \"#e6ffe6\",\n                margin: \"0.25rem 0\",\n                fontWeight: 400,\n                opacity: 0.95\n              },\n              children: [\"Opened: \", formatOpenDate(editFields.openDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"0.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEdit(a.id),\n                style: {\n                  background: \"#36B37E\",\n                  color: \"#fff\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  padding: \"0.5rem\",\n                  flex: 1,\n                  cursor: \"pointer\"\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEdit,\n                style: {\n                  background: \"#DE350B\",\n                  color: \"#fff\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  padding: \"0.5rem\",\n                  flex: 1,\n                  cursor: \"pointer\"\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => startEditing(a),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: \"1rem\"\n              },\n              children: a.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"0.8rem\",\n                marginTop: \"0.25rem\",\n                opacity: 0.9\n              },\n              children: [a.type, \" | \", a.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"0.85rem\",\n                color: \"#e6ffe6\",\n                marginTop: \"0.25rem\",\n                fontWeight: 400,\n                opacity: 0.95\n              },\n              children: [\"Opened: \", formatOpenDate(a.openDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 19\n          }, this), hoveredId === a.id && editingId !== a.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: \"4px\",\n              right: \"4px\",\n              display: \"flex\",\n              gap: \"0.5rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                startEditing(a);\n              },\n              style: {\n                background: \"rgba(255,255,255,0.9)\",\n                border: \"none\",\n                color: \"#0052CC\",\n                cursor: \"pointer\",\n                fontWeight: \"bold\",\n                padding: \"0.25rem 0.5rem\",\n                borderRadius: \"4px\"\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 19\n          }, this)]\n        }, a.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"0.75rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"0.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 13\n        }, this)]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 661,\n    columnNumber: 5\n  }, this);\n}\n_s(AssetsBoard, \"mDCZ8J+0yK/QNjV3AC5FlxhhXNA=\");\n_c = AssetsBoard;\nvar _c;\n$RefreshReg$(_c, \"AssetsBoard\");","map":{"version":3,"names":["React","useEffect","useState","assetsApi","jsxDEV","_jsxDEV","mockAssets","id","email","type","location","status","openDate","Date","toISOString","assetsDB","generateId","now","Math","random","toString","substr","formatOpenDate","dt","d","toLocaleDateString","toLocaleTimeString","AssetsBoard","_s","assets","setAssets","setEmail","setType","setLocation","editingId","setEditingId","editFields","setEditFields","hoveredId","setHoveredId","quickAdd","setQuickAdd","draggedAsset","setDraggedAsset","mounted","load","rows","listAssets","err","console","error","add","_quickAdd$status","_quickAdd$status2","_quickAdd$status3","assetEmail","assetType","assetLocation","trim","a","created","createAsset","prev","push","statusColumns","active","title","color","bgColor","groupedAssets","Object","keys","reduce","acc","filter","handleDragStart","e","asset","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","newStatus","updatedAsset","map","updateAsset","startEditing","saveEdit","patch","before","find","updated","cancelEdit","deleteAsset","style","padding","fontFamily","background","minHeight","children","textAlign","marginBottom","fontSize","fontWeight","margin","letterSpacing","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","boxShadow","display","gap","flexWrap","placeholder","value","onChange","target","flex","border","onClick","cursor","onDragOver","onDrop","draggable","onDragStart","onMouseEnter","onMouseLeave","position","opacity","flexDirection","s","marginTop","top","right","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/hussa/Desktop/flowtrack/frontend/src/components/assets/Assets.js"],"sourcesContent":["// ffull code ok\n\n// import React, { useEffect, useState } from \"react\";\n\n// // Mock API functions\n// const mockAssets = [\n//   {\n//     id: \"1\",\n//     email: \"john@example.com\",\n//     type: \"Laptop\",\n//     location: \"WFO\",\n//     status: \"active\",\n//     openDate: new Date().toISOString(),\n//   },\n//   {\n//     id: \"2\",\n//     email: \"user2@example.com\",\n//     type: \"Charger\",\n//     location: \"WFO\",\n//     status: \"maintenance\",\n//     openDate: new Date().toISOString(),\n//   },\n//   {\n//     id: \"3\",\n//     email: \"user3@example.com\",\n//     type: \"Network Issue\",\n//     location: \"WFO\",\n//     status: \"inactive\",\n//     openDate: new Date().toISOString(),\n//   },\n// ];\n\n// let assetsDB = [...mockAssets];\n\n// const listAssets = () => Promise.resolve([...assetsDB]);\n// const addAsset = (asset) => {\n//   assetsDB.push(asset);\n//   return Promise.resolve(asset);\n// };\n\n// const generateId = () =>\n//   `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n// // Helper function to format date/time for display\n// function formatOpenDate(dt) {\n//   if (!dt) return \"\";\n//   const d = new Date(dt);\n//   return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\n// }\n\n// export default function AssetsBoard() {\n//   const [assets, setAssets] = useState([]);\n//   const [email, setEmail] = useState(\"\");\n//   const [type, setType] = useState(\"Laptop\");\n//   const [location, setLocation] = useState(\"WFO\");\n//   const [editingId, setEditingId] = useState(null);\n//   const [editFields, setEditFields] = useState({});\n//   const [hoveredId, setHoveredId] = useState(null);\n//   const [quickAdd, setQuickAdd] = useState({});\n//   const [draggedAsset, setDraggedAsset] = useState(null);\n\n//   useEffect(() => {\n//     listAssets().then(setAssets);\n//   }, []);\n\n//   const add = async (status = \"active\") => {\n//     const assetEmail = status === \"form\" ? email : quickAdd[status]?.email;\n//     const assetType =\n//       status === \"form\" ? type : quickAdd[status]?.type || \"Laptop\";\n//     const assetLocation =\n//       status === \"form\" ? location : quickAdd[status]?.location || \"WFO\";\n//     if (!assetEmail?.trim()) return;\n\n//     const a = {\n//       id: generateId(),\n//       email: assetEmail,\n//       type: assetType,\n//       location: assetLocation,\n//       status: status === \"form\" ? \"active\" : status,\n//       openDate: new Date().toISOString(), // Save open date/time\n//     };\n//     await addAsset(a);\n//     setAssets(await listAssets());\n\n//     if (status === \"form\") {\n//       setEmail(\"\");\n//       setType(\"Laptop\");\n//       setLocation(\"WFO\");\n//     } else {\n//       setQuickAdd((prev) => ({\n//         ...prev,\n//         [status]: { email: \"\", type: \"Laptop\", location: \"WFO\" },\n//       }));\n//     }\n//   };\n\n//   const statusColumns = {\n//     active: { title: \"Active\", color: \"#22C55E\", bgColor: \"#C8E9DD\" },\n//     // maintenance: { title: \"Maintenance\", color: \"#EAB308\", bgColor: \"#FEF3C7\" },\n//     // inactive: { title: \"Inactive\", color: \"#EF4444\", bgColor: \"#FECACA\" },\n//   };\n\n//   const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n//     acc[status] = assets.filter((a) => a.status === status);\n//     return acc;\n//   }, {});\n\n//   const handleDragStart = (e, asset) => {\n//     setDraggedAsset(asset);\n//     e.dataTransfer.effectAllowed = \"move\";\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//     e.dataTransfer.dropEffect = \"move\";\n//   };\n\n//   const handleDrop = (e, newStatus) => {\n//     e.preventDefault();\n//     if (draggedAsset && draggedAsset.status !== newStatus) {\n//       const updatedAsset = { ...draggedAsset, status: newStatus };\n//       setAssets(assets.map((a) => (a.id === draggedAsset.id ? updatedAsset : a)));\n//     }\n//     setDraggedAsset(null);\n//   };\n\n//   const startEditing = (asset) => {\n//     setEditingId(asset.id);\n//     setEditFields({ ...asset });\n//   };\n\n//   const saveEdit = (id) => {\n//     setAssets(\n//       assets.map((a) => (a.id === id ? { ...a, ...editFields } : a))\n//     );\n//     setEditingId(null);\n//   };\n\n//   const cancelEdit = () => setEditingId(null);\n//   const deleteAsset = (id) => setAssets(assets.filter((a) => a.id !== id));\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"2rem\",\n//         fontFamily: \"Arial, sans-serif\",\n//         background: \"#D0F0F4\",\n//         minHeight: \"100vh\",\n//       }}\n//     >\n//       {/* Header */}\n//       <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n//         <h1\n//           style={{\n//             fontSize: \"2rem\",\n//             fontWeight: \"bold\",\n//             margin: 0,\n//             letterSpacing: \"2px\",\n//           }}\n//         >\n//           FLOW TRACK\n//         </h1>\n//       </div>\n\n//       {/* Add Asset Top Form */}\n//       <div\n//         style={{\n//           marginBottom: \"2rem\",\n//           background: \"#fff\",\n//           padding: \"1.5rem\",\n//           borderRadius: \"8px\",\n//           boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n//         }}\n//       >\n//         <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\" }}>Add Asset</h2>\n//         <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n//           <input\n//             placeholder=\"Email ID\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               borderRadius: \"4px\",\n//               border: \"1px solid #ccc\",\n//             }}\n//           />\n//           <select\n//             value={type}\n//             onChange={(e) => setType(e.target.value)}\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               borderRadius: \"4px\",\n//               border: \"1px solid #ccc\",\n//             }}\n//           >\n//             <option>Laptop</option>\n//             <option>Charger</option>\n//             <option>Network Issue</option>\n//           </select>\n//           <select\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               borderRadius: \"4px\",\n//               border: \"1px solid #ccc\",\n//             }}\n//           >\n//             <option>WFO</option>\n//             <option>WFH</option>\n//           </select>\n//           <button\n//             onClick={() => add(\"form\")}\n//             style={{\n//               padding: \"0.5rem 1rem\",\n//               background: \"#0052CC\",\n//               color: \"#fff\",\n//               border: \"none\",\n//               borderRadius: \"4px\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Kanban Board */}\n//       <div style={{ display: \"flex\", gap: \"1.5rem\" }}>\n//         {Object.keys(statusColumns).map((status) => (\n//           <div\n//             key={status}\n//             onDragOver={handleDragOver}\n//             onDrop={(e) => handleDrop(e, status)}\n//             style={{\n//               flex: 1,\n//               background: statusColumns[status].bgColor,\n//               padding: \"1.5rem\",\n//               borderRadius: \"12px\",\n//               minHeight: \"400px\",\n//             }}\n//           >\n//             <h3\n//               style={{\n//                 color: statusColumns[status].color,\n//                 fontSize: \"1.25rem\",\n//                 fontWeight: \"bold\",\n//                 marginBottom: \"1rem\",\n//                 textAlign: \"center\",\n//               }}\n//             >\n//               {statusColumns[status].title}\n//             </h3>\n\n//             {/* Assets */}\n//             {groupedAssets[status].map((a) => (\n//               <div\n//                 key={a.id}\n//                 draggable={editingId !== a.id}\n//                 onDragStart={(e) => handleDragStart(e, a)}\n//                 onMouseEnter={() => setHoveredId(a.id)}\n//                 onMouseLeave={() => setHoveredId(null)}\n//                 style={{\n//                   padding: \"1rem\",\n//                   marginBottom: \"0.75rem\",\n//                   borderRadius: \"8px\",\n//                   background: statusColumns[status].color,\n//                   color: \"#fff\",\n//                   fontWeight: \"600\",\n//                   boxShadow:\n//                     draggedAsset?.id === a.id\n//                       ? \"0 4px 12px rgba(0,0,0,0.2)\"\n//                       : \"0 2px 4px rgba(0,0,0,0.1)\",\n//                   position: \"relative\",\n//                   cursor: editingId === a.id ? \"default\" : \"move\",\n//                   opacity: draggedAsset?.id === a.id ? 0.5 : 1,\n//                 }}\n//               >\n//                 {editingId === a.id ? (\n//                   <div\n//                     style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.5rem\" }}\n//                   >\n//                     <input\n//                       value={editFields.email}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, email: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     />\n//                     <select\n//                       value={editFields.type}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, type: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     >\n//                       <option>Laptop</option>\n//                       <option>Charger</option>\n//                       <option>Network Issue</option>\n//                     </select>\n//                     <select\n//                       value={editFields.location}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, location: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     >\n//                       <option>WFH</option>\n//                       <option>WFO</option>\n//                     </select>\n//                     <select\n//                       value={editFields.status}\n//                       onChange={(e) =>\n//                         setEditFields({ ...editFields, status: e.target.value })\n//                       }\n//                       style={{ padding: \"0.5rem\", borderRadius: \"4px\", border: \"none\" }}\n//                     >\n//                       {Object.keys(statusColumns).map((s) => (\n//                         <option key={s} value={s}>\n//                           {statusColumns[s].title}\n//                         </option>\n//                       ))}\n//                     </select>\n//                     {/* Open Date/Time field visible in edit mode */}\n//                     <div\n//                       style={{\n//                         fontSize: \"0.85rem\",\n//                         color: \"#e6ffe6\",\n//                         margin: \"0.25rem 0\",\n//                         fontWeight: 400,\n//                         opacity: 0.95,\n//                       }}\n//                     >\n//                       Opened: {formatOpenDate(editFields.openDate)}\n//                     </div>\n//                     <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n//                       <button\n//                         onClick={() => saveEdit(a.id)}\n//                         style={{\n//                           background: \"#36B37E\",\n//                           color: \"#fff\",\n//                           border: \"none\",\n//                           borderRadius: \"4px\",\n//                           padding: \"0.5rem\",\n//                           flex: 1,\n//                           cursor: \"pointer\",\n//                         }}\n//                       >\n//                         Save\n//                       </button>\n//                       <button\n//                         onClick={cancelEdit}\n//                         style={{\n//                           background: \"#DE350B\",\n//                           color: \"#fff\",\n//                           border: \"none\",\n//                           borderRadius: \"4px\",\n//                           padding: \"0.5rem\",\n//                           flex: 1,\n//                           cursor: \"pointer\",\n//                         }}\n//                       >\n//                         Cancel\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ) : (\n//                   <div onClick={() => startEditing(a)} style={{ cursor: \"pointer\" }}>\n//                     <div style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>{a.email}</div>\n//                     <div\n//                       style={{\n//                         fontSize: \"0.8rem\",\n//                         marginTop: \"0.25rem\",\n//                         opacity: 0.9,\n//                       }}\n//                     >\n//                       {a.type} | {a.location}\n//                     </div>\n//                     {/* Open Date/Time Display */}\n//                     <div\n//                       style={{\n//                         fontSize: \"0.85rem\",\n//                         color: \"#e6ffe6\",\n//                         marginTop: \"0.25rem\",\n//                         fontWeight: 400,\n//                         opacity: 0.95,\n//                       }}\n//                     >\n//                       Opened: {formatOpenDate(a.openDate)}\n//                     </div>\n//                   </div>\n//                 )}\n\n//                 {/* Hover Toolbar */}\n//                 {hoveredId === a.id && editingId !== a.id && (\n//                   <div\n//                     style={{\n//                       position: \"absolute\",\n//                       top: \"4px\",\n//                       right: \"4px\",\n//                       display: \"flex\",\n//                       gap: \"0.5rem\",\n//                     }}\n//                   >\n//                     <button\n//                       onClick={(e) => {\n//                         e.stopPropagation();\n//                         startEditing(a);\n//                       }}\n//                       style={{\n//                         background: \"rgba(255,255,255,0.9)\",\n//                         border: \"none\",\n//                         color: \"#0052CC\",\n//                         cursor: \"pointer\",\n//                         fontWeight: \"bold\",\n//                         padding: \"0.25rem 0.5rem\",\n//                         borderRadius: \"4px\",\n//                       }}\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       onClick={(e) => {\n//                         e.stopPropagation();\n//                         deleteAsset(a.id);\n//                       }}\n//                       style={{\n//                         background: \"rgba(255,255,255,0.9)\",\n//                         border: \"none\",\n//                         color: \"#DE350B\",\n//                         cursor: \"pointer\",\n//                         fontWeight: \"bold\",\n//                         padding: \"0.25rem 0.5rem\",\n//                         borderRadius: \"4px\",\n//                       }}\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n\n//             {/* Quick Add in Column */}\n//             <div\n//               style={{\n//                 marginTop: \"0.75rem\",\n//                 display: \"flex\",\n//                 flexDirection: \"column\",\n//                 gap: \"0.5rem\",\n//               }}\n//             ></div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// for more updates\n\nimport React, { useEffect, useState } from \"react\";\nimport assetsApi from \"../../services/assetsApi\";\n\n// NOTE: component expects backend fields; assetsApi maps open_date -> openDate\n\n// Mock fallback (used only if API fails)\nconst mockAssets = [\n  {\n    id: \"1\",\n    email: \"john@example.com\",\n    type: \"Laptop\",\n    location: \"WFO\",\n    status: \"active\",\n    openDate: new Date().toISOString(),\n  },\n  {\n    id: \"2\",\n    email: \"user2@example.com\",\n    type: \"Charger\",\n    location: \"WFO\",\n    status: \"maintenance\",\n    openDate: new Date().toISOString(),\n  },\n  {\n    id: \"3\",\n    email: \"user3@example.com\",\n    type: \"Network Issue\",\n    location: \"WFO\",\n    status: \"inactive\",\n    openDate: new Date().toISOString(),\n  },\n];\n\nlet assetsDB = [...mockAssets];\n\nconst generateId = () =>\n  `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n// Helper function to format date/time for display\nfunction formatOpenDate(dt) {\n  if (!dt) return \"\";\n  const d = new Date(dt);\n  return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\n}\n\nexport default function AssetsBoard() {\n  const [assets, setAssets] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [type, setType] = useState(\"Laptop\");\n  const [location, setLocation] = useState(\"WFO\");\n  const [editingId, setEditingId] = useState(null);\n  const [editFields, setEditFields] = useState({});\n  const [hoveredId, setHoveredId] = useState(null);\n  const [quickAdd, setQuickAdd] = useState({});\n  const [draggedAsset, setDraggedAsset] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    async function load() {\n      try {\n        const rows = await assetsApi.listAssets();\n        if (mounted) setAssets(rows);\n      } catch (err) {\n        // fallback to mock data\n        console.error(\"Failed to load assets from API, using mock\", err);\n        setAssets([...assetsDB]);\n      }\n    }\n\n    load();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const add = async (status = \"active\") => {\n    const assetEmail = status === \"form\" ? email : quickAdd[status]?.email;\n    const assetType =\n      status === \"form\" ? type : quickAdd[status]?.type || \"Laptop\";\n    const assetLocation =\n      status === \"form\" ? location : quickAdd[status]?.location || \"WFO\";\n    if (!assetEmail?.trim()) return;\n\n    const a = {\n      // id assigned by backend; keep a temporary id so UI is responsive\n      id: generateId(),\n      email: assetEmail,\n      type: assetType,\n      location: assetLocation,\n      status: status === \"form\" ? \"active\" : status,\n      openDate: new Date().toISOString(), // client-side display field\n    };\n\n    try {\n      const created = await assetsApi.createAsset(a);\n      // replace/append created item\n      setAssets((prev) => [created, ...prev]);\n    } catch (err) {\n      console.error(\"createAsset failed, falling back to mock\", err);\n      await (async () => {\n        assetsDB.push(a);\n        setAssets([...assetsDB]);\n      })();\n    }\n\n    if (status === \"form\") {\n      setEmail(\"\");\n      setType(\"Laptop\");\n      setLocation(\"WFO\");\n    } else {\n      setQuickAdd((prev) => ({\n        ...prev,\n        [status]: { email: \"\", type: \"Laptop\", location: \"WFO\" },\n      }));\n    }\n  };\n\n  const statusColumns = {\n    active: { title: \"Active\", color: \"#22C55E\", bgColor: \"#C8E9DD\" },\n    // maintenance: { title: \"Maintenance\", color: \"#EAB308\", bgColor: \"#FEF3C7\" },\n    // inactive: { title: \"Inactive\", color: \"#EF4444\", bgColor: \"#FECACA\" },\n  };\n\n  const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n    acc[status] = assets.filter((a) => a.status === status);\n    return acc;\n  }, {});\n\n  const handleDragStart = (e, asset) => {\n    setDraggedAsset(asset);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n  };\n\n  const handleDrop = async (e, newStatus) => {\n    e.preventDefault();\n    if (draggedAsset && draggedAsset.status !== newStatus) {\n      const updatedAsset = { ...draggedAsset, status: newStatus };\n      // optimistic update\n      setAssets((prev) =>\n        prev.map((a) => (a.id === draggedAsset.id ? updatedAsset : a)),\n      );\n      try {\n        await assetsApi.updateAsset(draggedAsset.id, { status: newStatus });\n      } catch (err) {\n        console.error(\"Failed to update asset status\", err);\n        // revert on failure\n        setAssets((prev) =>\n          prev.map((a) => (a.id === draggedAsset.id ? draggedAsset : a)),\n        );\n      }\n    }\n    setDraggedAsset(null);\n  };\n\n  const startEditing = (asset) => {\n    setEditingId(asset.id);\n    setEditFields({ ...asset });\n  };\n\n  const saveEdit = async (id) => {\n    const patch = { ...editFields };\n    // optimistic update\n    const before = assets.find((a) => a.id === id);\n    setAssets((prev) =>\n      prev.map((a) => (a.id === id ? { ...a, ...patch } : a)),\n    );\n    setEditingId(null);\n    try {\n      const updated = await assetsApi.updateAsset(id, patch);\n      setAssets((prev) => prev.map((a) => (a.id === id ? updated : a)));\n    } catch (err) {\n      console.error(\"Failed to save edit\", err);\n      // revert\n      setAssets((prev) => prev.map((a) => (a.id === id ? before : a)));\n    }\n  };\n\n  const cancelEdit = () => setEditingId(null);\n  const deleteAsset = async (id) => {\n    const before = assets;\n    setAssets((prev) => prev.filter((a) => a.id !== id));\n    try {\n      await assetsApi.deleteAsset(id);\n    } catch (err) {\n      console.error(\"Failed to delete asset\", err);\n      setAssets(before);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"2rem\",\n        fontFamily: \"Arial, sans-serif\",\n        background: \"#D0F0F4\",\n        minHeight: \"100vh\",\n      }}\n    >\n      {/* Header */}\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n        <h1\n          style={{\n            fontSize: \"2rem\",\n            fontWeight: \"bold\",\n            margin: 0,\n            letterSpacing: \"2px\",\n          }}\n        >\n          FLOW TRACK\n        </h1>\n      </div>\n\n      {/* Add Asset Top Form */}\n      <div\n        style={{\n          marginBottom: \"2rem\",\n          background: \"#fff\",\n          padding: \"1.5rem\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n        }}\n      >\n        <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\" }}>Add Asset</h2>\n        <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n          <input\n            placeholder=\"Email ID\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            style={{\n              flex: 1,\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\",\n            }}\n          />\n          <select\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n            style={{\n              flex: 1,\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\",\n            }}\n          >\n            <option>Laptop</option>\n            <option>Charger</option>\n            <option>Network Issue</option>\n          </select>\n          <select\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            style={{\n              flex: 1,\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\",\n            }}\n          >\n            <option>WFO</option>\n            <option>WFH</option>\n          </select>\n          <button\n            onClick={() => add(\"form\")}\n            style={{\n              padding: \"0.5rem 1rem\",\n              background: \"#0052CC\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n\n      {/* Kanban Board */}\n      <div style={{ display: \"flex\", gap: \"1.5rem\" }}>\n        {Object.keys(statusColumns).map((status) => (\n          <div\n            key={status}\n            onDragOver={handleDragOver}\n            onDrop={(e) => handleDrop(e, status)}\n            style={{\n              flex: 1,\n              background: statusColumns[status].bgColor,\n              padding: \"1.5rem\",\n              borderRadius: \"12px\",\n              minHeight: \"400px\",\n            }}\n          >\n            <h3\n              style={{\n                color: statusColumns[status].color,\n                fontSize: \"1.25rem\",\n                fontWeight: \"bold\",\n                marginBottom: \"1rem\",\n                textAlign: \"center\",\n              }}\n            >\n              {statusColumns[status].title}\n            </h3>\n\n            {/* Assets */}\n            {groupedAssets[status].map((a) => (\n              <div\n                key={a.id}\n                draggable={editingId !== a.id}\n                onDragStart={(e) => handleDragStart(e, a)}\n                onMouseEnter={() => setHoveredId(a.id)}\n                onMouseLeave={() => setHoveredId(null)}\n                style={{\n                  padding: \"1rem\",\n                  marginBottom: \"0.75rem\",\n                  borderRadius: \"8px\",\n                  background: statusColumns[status].color,\n                  color: \"#fff\",\n                  fontWeight: \"600\",\n                  boxShadow:\n                    draggedAsset?.id === a.id\n                      ? \"0 4px 12px rgba(0,0,0,0.2)\"\n                      : \"0 2px 4px rgba(0,0,0,0.1)\",\n                  position: \"relative\",\n                  cursor: editingId === a.id ? \"default\" : \"move\",\n                  opacity: draggedAsset?.id === a.id ? 0.5 : 1,\n                }}\n              >\n                {editingId === a.id ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      gap: \"0.5rem\",\n                    }}\n                  >\n                    <input\n                      value={editFields.email}\n                      onChange={(e) =>\n                        setEditFields({ ...editFields, email: e.target.value })\n                      }\n                      style={{\n                        padding: \"0.5rem\",\n                        borderRadius: \"4px\",\n                        border: \"none\",\n                      }}\n                    />\n                    <select\n                      value={editFields.type}\n                      onChange={(e) =>\n                        setEditFields({ ...editFields, type: e.target.value })\n                      }\n                      style={{\n                        padding: \"0.5rem\",\n                        borderRadius: \"4px\",\n                        border: \"none\",\n                      }}\n                    >\n                      <option>Laptop</option>\n                      <option>Charger</option>\n                      <option>Network Issue</option>\n                    </select>\n                    <select\n                      value={editFields.location}\n                      onChange={(e) =>\n                        setEditFields({\n                          ...editFields,\n                          location: e.target.value,\n                        })\n                      }\n                      style={{\n                        padding: \"0.5rem\",\n                        borderRadius: \"4px\",\n                        border: \"none\",\n                      }}\n                    >\n                      <option>WFH</option>\n                      <option>WFO</option>\n                    </select>\n                    <select\n                      value={editFields.status}\n                      onChange={(e) =>\n                        setEditFields({ ...editFields, status: e.target.value })\n                      }\n                      style={{\n                        padding: \"0.5rem\",\n                        borderRadius: \"4px\",\n                        border: \"none\",\n                      }}\n                    >\n                      {Object.keys(statusColumns).map((s) => (\n                        <option key={s} value={s}>\n                          {statusColumns[s].title}\n                        </option>\n                      ))}\n                    </select>\n                    {/* Open Date/Time field visible in edit mode */}\n                    <div\n                      style={{\n                        fontSize: \"0.85rem\",\n                        color: \"#e6ffe6\",\n                        margin: \"0.25rem 0\",\n                        fontWeight: 400,\n                        opacity: 0.95,\n                      }}\n                    >\n                      Opened: {formatOpenDate(editFields.openDate)}\n                    </div>\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button\n                        onClick={() => saveEdit(a.id)}\n                        style={{\n                          background: \"#36B37E\",\n                          color: \"#fff\",\n                          border: \"none\",\n                          borderRadius: \"4px\",\n                          padding: \"0.5rem\",\n                          flex: 1,\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={cancelEdit}\n                        style={{\n                          background: \"#DE350B\",\n                          color: \"#fff\",\n                          border: \"none\",\n                          borderRadius: \"4px\",\n                          padding: \"0.5rem\",\n                          flex: 1,\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div\n                    onClick={() => startEditing(a)}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <div style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>\n                      {a.email}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: \"0.8rem\",\n                        marginTop: \"0.25rem\",\n                        opacity: 0.9,\n                      }}\n                    >\n                      {a.type} | {a.location}\n                    </div>\n                    {/* Open Date/Time Display */}\n                    <div\n                      style={{\n                        fontSize: \"0.85rem\",\n                        color: \"#e6ffe6\",\n                        marginTop: \"0.25rem\",\n                        fontWeight: 400,\n                        opacity: 0.95,\n                      }}\n                    >\n                      Opened: {formatOpenDate(a.openDate)}\n                    </div>\n                  </div>\n                )}\n\n                {/* Hover Toolbar */}\n                {hoveredId === a.id && editingId !== a.id && (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"4px\",\n                      right: \"4px\",\n                      display: \"flex\",\n                      gap: \"0.5rem\",\n                    }}\n                  >\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditing(a);\n                      }}\n                      style={{\n                        background: \"rgba(255,255,255,0.9)\",\n                        border: \"none\",\n                        color: \"#0052CC\",\n                        cursor: \"pointer\",\n                        fontWeight: \"bold\",\n                        padding: \"0.25rem 0.5rem\",\n                        borderRadius: \"4px\",\n                      }}\n                    >\n                      Edit\n                    </button>\n                  </div>\n                )}\n              </div>\n            ))}\n\n            {/* Quick Add in Column */}\n            <div\n              style={{\n                marginTop: \"0.75rem\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"0.5rem\",\n              }}\n            ></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}