{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hussa\\\\Desktop\\\\flowtrack\\\\frontend\\\\src\\\\components\\\\notifications\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { listNotifs, markNotif, getCurrentUser } from \"../../services/mockApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notifications() {\n  _s();\n  const user = getCurrentUser();\n  const [notifs, setNotifs] = useState([]);\n  useEffect(() => {\n    if (user) listNotifs(user.id).then(setNotifs);\n  }, [user]);\n  const mark = async id => {\n    await markNotif(id);\n    setNotifs(await listNotifs(user.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    role: \"region\",\n    \"aria-labelledby\": \"notifs-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"notifs-title\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifs.map(n => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [n.text, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"small\",\n            children: [\"\\u2022 \", new Date(n.ts).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => mark(n.id),\n            children: \"Mark read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"27j8AO2b6XmQaEQCcZMo+CoP1WI=\");\n_c = Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","listNotifs","markNotif","getCurrentUser","jsxDEV","_jsxDEV","Notifications","_s","user","notifs","setNotifs","id","then","mark","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","map","n","style","display","justifyContent","text","Date","ts","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hussa/Desktop/flowtrack/frontend/src/components/notifications/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { listNotifs, markNotif, getCurrentUser } from \"../../services/mockApi\";\n\nexport default function Notifications() {\n  const user = getCurrentUser();\n  const [notifs, setNotifs] = useState([]);\n  useEffect(() => {\n    if (user) listNotifs(user.id).then(setNotifs);\n  }, [user]);\n\n  const mark = async (id) => {\n    await markNotif(id);\n    setNotifs(await listNotifs(user.id));\n  };\n\n  return (\n    <div className=\"card\" role=\"region\" aria-labelledby=\"notifs-title\">\n      <h2 id=\"notifs-title\">Notifications</h2>\n      <ul>\n        {notifs.map((n) => (\n          <li\n            key={n.id}\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <span>\n              {n.text}{\" \"}\n              <small className=\"small\">\n                â€¢ {new Date(n.ts).toLocaleString()}\n              </small>\n            </span>\n            <div>\n              <button className=\"btn\" onClick={() => mark(n.id)}>\n                Mark read\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGL,cAAc,CAAC,CAAC;EAC7B,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAEP,UAAU,CAACO,IAAI,CAACG,EAAE,CAAC,CAACC,IAAI,CAACF,SAAS,CAAC;EAC/C,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,MAAMK,IAAI,GAAG,MAAOF,EAAE,IAAK;IACzB,MAAMT,SAAS,CAACS,EAAE,CAAC;IACnBD,SAAS,CAAC,MAAMT,UAAU,CAACO,IAAI,CAACG,EAAE,CAAC,CAAC;EACtC,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,MAAM;IAACC,IAAI,EAAC,QAAQ;IAAC,mBAAgB,cAAc;IAAAC,QAAA,gBAChEX,OAAA;MAAIM,EAAE,EAAC,cAAc;MAAAK,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCf,OAAA;MAAAW,QAAA,EACGP,MAAM,CAACY,GAAG,CAAEC,CAAC,iBACZjB,OAAA;QAEEkB,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAT,QAAA,gBAE5DX,OAAA;UAAAW,QAAA,GACGM,CAAC,CAACI,IAAI,EAAE,GAAG,eACZrB,OAAA;YAAOS,SAAS,EAAC,OAAO;YAAAE,QAAA,GAAC,SACrB,EAAC,IAAIW,IAAI,CAACL,CAAC,CAACM,EAAE,CAAC,CAACC,cAAc,CAAC,CAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACPf,OAAA;UAAAW,QAAA,eACEX,OAAA;YAAQS,SAAS,EAAC,KAAK;YAACgB,OAAO,EAAEA,CAAA,KAAMjB,IAAI,CAACS,CAAC,CAACX,EAAE,CAAE;YAAAK,QAAA,EAAC;UAEnD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAbDE,CAAC,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcP,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACb,EAAA,CArCuBD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}