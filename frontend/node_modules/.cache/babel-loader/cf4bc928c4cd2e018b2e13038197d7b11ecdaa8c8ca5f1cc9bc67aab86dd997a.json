{"ast":null,"code":"const API_URL = \"http://localhost:8000\"; // FastAPI backend base URL\n\n// Map backend status -> frontend status\nconst mapStatusOut = s => {\n  var _m$s;\n  if (!s) return s;\n  const m = {\n    Open: \"active\",\n    Assigned: \"maintenance\",\n    Closed: \"inactive\"\n  };\n  return (_m$s = m[s]) !== null && _m$s !== void 0 ? _m$s : String(s).toLowerCase();\n};\n\n// Map frontend status -> backend status\nconst mapStatusIn = s => {\n  var _m$s2;\n  if (!s) return s;\n  const m = {\n    active: \"Open\",\n    maintenance: \"Assigned\",\n    inactive: \"Closed\"\n  };\n  return (_m$s2 = m[s]) !== null && _m$s2 !== void 0 ? _m$s2 : s;\n};\nconst mapOut = item => {\n  var _ref, _ref2, _item$openDate, _ref3, _item$closeDate, _ref4, _item$description, _ref5, _ref6, _item$id;\n  if (!item) return item;\n  // normalize field names to frontend expectations\n  const openDate = (_ref = (_ref2 = (_item$openDate = item.openDate) !== null && _item$openDate !== void 0 ? _item$openDate : item.open_date) !== null && _ref2 !== void 0 ? _ref2 : item.open_date_time) !== null && _ref !== void 0 ? _ref : null;\n  const closeDate = (_ref3 = (_item$closeDate = item.closeDate) !== null && _item$closeDate !== void 0 ? _item$closeDate : item.close_date) !== null && _ref3 !== void 0 ? _ref3 : null;\n  const description = (_ref4 = (_item$description = item.description) !== null && _item$description !== void 0 ? _item$description : item.desc) !== null && _ref4 !== void 0 ? _ref4 : null;\n  const id = (_ref5 = (_ref6 = (_item$id = item.id) !== null && _item$id !== void 0 ? _item$id : item.asset_id) !== null && _ref6 !== void 0 ? _ref6 : item.pk) !== null && _ref5 !== void 0 ? _ref5 : null;\n  return {\n    ...item,\n    id,\n    status: mapStatusOut(item.status),\n    openDate,\n    closeDate,\n    description\n  };\n};\nexport async function listAssets() {\n  const res = await fetch(`${API_URL}/assets`);\n  if (!res.ok) throw new Error(\"Failed to fetch assets\");\n  const data = await res.json();\n\n  // Backend may return either an array or an envelope { value: [...] }\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && Array.isArray(data.value)) return data.value.map(mapOut);\n  // fallback: try common shapes\n  if (data && Array.isArray(data.items)) return data.items.map(mapOut);\n  return [];\n}\nexport async function addAsset(asset) {\n  // Send only the fields the backend schema expects (frontend status values)\n  const toSend = {\n    email: asset.email,\n    type: asset.type,\n    location: asset.location,\n    status: asset.status,\n    description: asset.description\n  };\n  const res = await fetch(`${API_URL}/assets`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(toSend)\n  });\n  if (!res.ok) throw new Error(\"Failed to add asset\");\n  const data = await res.json();\n  // normalize returned asset(s)\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && data.value) return data.value.map(mapOut);\n  if (data && data.id) return mapOut(data);\n  return data;\n}\nexport async function deleteAsset(id) {\n  const res = await fetch(`${API_URL}/assets/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) throw new Error(\"Failed to delete asset\");\n  const data = await res.json();\n  return data;\n}\nexport async function updateAsset(id, patch) {\n  // Send only the fields expected by backend\n  const toSend = {\n    ...(patch.email !== undefined ? {\n      email: patch.email\n    } : {}),\n    ...(patch.type !== undefined ? {\n      type: patch.type\n    } : {}),\n    ...(patch.location !== undefined ? {\n      location: patch.location\n    } : {}),\n    ...(patch.status !== undefined ? {\n      status: patch.status\n    } : {}),\n    ...(patch.description !== undefined ? {\n      description: patch.description\n    } : {})\n  };\n  const res = await fetch(`${API_URL}/assets/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(toSend)\n  });\n  if (!res.ok) throw new Error(\"Failed to update asset\");\n  const data = await res.json();\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && data.value) return data.value.map(mapOut);\n  if (data && data.id) return mapOut(data);\n  return data;\n}","map":{"version":3,"names":["API_URL","mapStatusOut","s","_m$s","m","Open","Assigned","Closed","String","toLowerCase","mapStatusIn","_m$s2","active","maintenance","inactive","mapOut","item","_ref","_ref2","_item$openDate","_ref3","_item$closeDate","_ref4","_item$description","_ref5","_ref6","_item$id","openDate","open_date","open_date_time","closeDate","close_date","description","desc","id","asset_id","pk","status","listAssets","res","fetch","ok","Error","data","json","Array","isArray","map","value","items","addAsset","asset","toSend","email","type","location","method","headers","body","JSON","stringify","deleteAsset","updateAsset","patch","undefined"],"sources":["C:/Users/chavi/OneDrive/Desktop/flowtrack (2)/flowtrack/frontend/src/components/assetsApi.js"],"sourcesContent":["const API_URL = \"http://localhost:8000\"; // FastAPI backend base URL\n\n// Map backend status -> frontend status\nconst mapStatusOut = (s) => {\n  if (!s) return s;\n  const m = {\n    Open: \"active\",\n    Assigned: \"maintenance\",\n    Closed: \"inactive\",\n  };\n  return m[s] ?? String(s).toLowerCase();\n};\n\n// Map frontend status -> backend status\nconst mapStatusIn = (s) => {\n  if (!s) return s;\n  const m = {\n    active: \"Open\",\n    maintenance: \"Assigned\",\n    inactive: \"Closed\",\n  };\n  return m[s] ?? s;\n};\n\nconst mapOut = (item) => {\n  if (!item) return item;\n  // normalize field names to frontend expectations\n  const openDate = item.openDate ?? item.open_date ?? item.open_date_time ?? null;\n  const closeDate = item.closeDate ?? item.close_date ?? null;\n  const description = item.description ?? item.desc ?? null;\n  const id = item.id ?? item.asset_id ?? item.pk ?? null;\n  return {\n    ...item,\n    id,\n    status: mapStatusOut(item.status),\n    openDate,\n    closeDate,\n    description,\n  };\n};\n\nexport async function listAssets() {\n  const res = await fetch(`${API_URL}/assets`);\n  if (!res.ok) throw new Error(\"Failed to fetch assets\");\n  const data = await res.json();\n\n  // Backend may return either an array or an envelope { value: [...] }\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && Array.isArray(data.value)) return data.value.map(mapOut);\n  // fallback: try common shapes\n  if (data && Array.isArray(data.items)) return data.items.map(mapOut);\n  return [];\n}\n\nexport async function addAsset(asset) {\n  // Send only the fields the backend schema expects (frontend status values)\n  const toSend = {\n    email: asset.email,\n    type: asset.type,\n    location: asset.location,\n    status: asset.status,\n    description: asset.description,\n  };\n\n  const res = await fetch(`${API_URL}/assets`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(toSend),\n  });\n  if (!res.ok) throw new Error(\"Failed to add asset\");\n  const data = await res.json();\n  // normalize returned asset(s)\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && data.value) return data.value.map(mapOut);\n  if (data && data.id) return mapOut(data);\n  return data;\n}\n\nexport async function deleteAsset(id) {\n  const res = await fetch(`${API_URL}/assets/${id}`, {\n    method: \"DELETE\",\n  });\n  if (!res.ok) throw new Error(\"Failed to delete asset\");\n  const data = await res.json();\n  return data;\n}\n\nexport async function updateAsset(id, patch) {\n  // Send only the fields expected by backend\n  const toSend = {\n    ...(patch.email !== undefined ? { email: patch.email } : {}),\n    ...(patch.type !== undefined ? { type: patch.type } : {}),\n    ...(patch.location !== undefined ? { location: patch.location } : {}),\n    ...(patch.status !== undefined ? { status: patch.status } : {}),\n    ...(patch.description !== undefined ? { description: patch.description } : {}),\n  };\n  const res = await fetch(`${API_URL}/assets/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(toSend),\n  });\n  if (!res.ok) throw new Error(\"Failed to update asset\");\n  const data = await res.json();\n  if (Array.isArray(data)) return data.map(mapOut);\n  if (data && data.value) return data.value.map(mapOut);\n  if (data && data.id) return mapOut(data);\n  return data;\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;EAAA,IAAAC,IAAA;EAC1B,IAAI,CAACD,CAAC,EAAE,OAAOA,CAAC;EAChB,MAAME,CAAC,GAAG;IACRC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,aAAa;IACvBC,MAAM,EAAE;EACV,CAAC;EACD,QAAAJ,IAAA,GAAOC,CAAC,CAACF,CAAC,CAAC,cAAAC,IAAA,cAAAA,IAAA,GAAIK,MAAM,CAACN,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;AACxC,CAAC;;AAED;AACA,MAAMC,WAAW,GAAIR,CAAC,IAAK;EAAA,IAAAS,KAAA;EACzB,IAAI,CAACT,CAAC,EAAE,OAAOA,CAAC;EAChB,MAAME,CAAC,GAAG;IACRQ,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,UAAU;IACvBC,QAAQ,EAAE;EACZ,CAAC;EACD,QAAAH,KAAA,GAAOP,CAAC,CAACF,CAAC,CAAC,cAAAS,KAAA,cAAAA,KAAA,GAAIT,CAAC;AAClB,CAAC;AAED,MAAMa,MAAM,GAAIC,IAAI,IAAK;EAAA,IAAAC,IAAA,EAAAC,KAAA,EAAAC,cAAA,EAAAC,KAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,iBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA;EACvB,IAAI,CAACV,IAAI,EAAE,OAAOA,IAAI;EACtB;EACA,MAAMW,QAAQ,IAAAV,IAAA,IAAAC,KAAA,IAAAC,cAAA,GAAGH,IAAI,CAACW,QAAQ,cAAAR,cAAA,cAAAA,cAAA,GAAIH,IAAI,CAACY,SAAS,cAAAV,KAAA,cAAAA,KAAA,GAAIF,IAAI,CAACa,cAAc,cAAAZ,IAAA,cAAAA,IAAA,GAAI,IAAI;EAC/E,MAAMa,SAAS,IAAAV,KAAA,IAAAC,eAAA,GAAGL,IAAI,CAACc,SAAS,cAAAT,eAAA,cAAAA,eAAA,GAAIL,IAAI,CAACe,UAAU,cAAAX,KAAA,cAAAA,KAAA,GAAI,IAAI;EAC3D,MAAMY,WAAW,IAAAV,KAAA,IAAAC,iBAAA,GAAGP,IAAI,CAACgB,WAAW,cAAAT,iBAAA,cAAAA,iBAAA,GAAIP,IAAI,CAACiB,IAAI,cAAAX,KAAA,cAAAA,KAAA,GAAI,IAAI;EACzD,MAAMY,EAAE,IAAAV,KAAA,IAAAC,KAAA,IAAAC,QAAA,GAAGV,IAAI,CAACkB,EAAE,cAAAR,QAAA,cAAAA,QAAA,GAAIV,IAAI,CAACmB,QAAQ,cAAAV,KAAA,cAAAA,KAAA,GAAIT,IAAI,CAACoB,EAAE,cAAAZ,KAAA,cAAAA,KAAA,GAAI,IAAI;EACtD,OAAO;IACL,GAAGR,IAAI;IACPkB,EAAE;IACFG,MAAM,EAAEpC,YAAY,CAACe,IAAI,CAACqB,MAAM,CAAC;IACjCV,QAAQ;IACRG,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAED,OAAO,eAAeM,UAAUA,CAAA,EAAG;EACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGxC,OAAO,SAAS,CAAC;EAC5C,IAAI,CAACuC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;;EAE7B;EACA,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACI,GAAG,CAAChC,MAAM,CAAC;EAChD,IAAI4B,IAAI,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAACK,KAAK,CAAC,EAAE,OAAOL,IAAI,CAACK,KAAK,CAACD,GAAG,CAAChC,MAAM,CAAC;EACpE;EACA,IAAI4B,IAAI,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAACM,KAAK,CAAC,EAAE,OAAON,IAAI,CAACM,KAAK,CAACF,GAAG,CAAChC,MAAM,CAAC;EACpE,OAAO,EAAE;AACX;AAEA,OAAO,eAAemC,QAAQA,CAACC,KAAK,EAAE;EACpC;EACA,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAEF,KAAK,CAACE,KAAK;IAClBC,IAAI,EAAEH,KAAK,CAACG,IAAI;IAChBC,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;IACxBlB,MAAM,EAAEc,KAAK,CAACd,MAAM;IACpBL,WAAW,EAAEmB,KAAK,CAACnB;EACrB,CAAC;EAED,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGxC,OAAO,SAAS,EAAE;IAC3CwD,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,MAAM;EAC7B,CAAC,CAAC;EACF,IAAI,CAACb,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACnD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B;EACA,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACI,GAAG,CAAChC,MAAM,CAAC;EAChD,IAAI4B,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE,OAAOL,IAAI,CAACK,KAAK,CAACD,GAAG,CAAChC,MAAM,CAAC;EACrD,IAAI4B,IAAI,IAAIA,IAAI,CAACT,EAAE,EAAE,OAAOnB,MAAM,CAAC4B,IAAI,CAAC;EACxC,OAAOA,IAAI;AACb;AAEA,OAAO,eAAekB,WAAWA,CAAC3B,EAAE,EAAE;EACpC,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGxC,OAAO,WAAWkC,EAAE,EAAE,EAAE;IACjDsB,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACjB,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI;AACb;AAEA,OAAO,eAAemB,WAAWA,CAAC5B,EAAE,EAAE6B,KAAK,EAAE;EAC3C;EACA,MAAMX,MAAM,GAAG;IACb,IAAIW,KAAK,CAACV,KAAK,KAAKW,SAAS,GAAG;MAAEX,KAAK,EAAEU,KAAK,CAACV;IAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,IAAIU,KAAK,CAACT,IAAI,KAAKU,SAAS,GAAG;MAAEV,IAAI,EAAES,KAAK,CAACT;IAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACzD,IAAIS,KAAK,CAACR,QAAQ,KAAKS,SAAS,GAAG;MAAET,QAAQ,EAAEQ,KAAK,CAACR;IAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,IAAIQ,KAAK,CAAC1B,MAAM,KAAK2B,SAAS,GAAG;MAAE3B,MAAM,EAAE0B,KAAK,CAAC1B;IAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/D,IAAI0B,KAAK,CAAC/B,WAAW,KAAKgC,SAAS,GAAG;MAAEhC,WAAW,EAAE+B,KAAK,CAAC/B;IAAY,CAAC,GAAG,CAAC,CAAC;EAC/E,CAAC;EACD,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGxC,OAAO,WAAWkC,EAAE,EAAE,EAAE;IACjDsB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,MAAM;EAC7B,CAAC,CAAC;EACF,IAAI,CAACb,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACI,GAAG,CAAChC,MAAM,CAAC;EAChD,IAAI4B,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE,OAAOL,IAAI,CAACK,KAAK,CAACD,GAAG,CAAChC,MAAM,CAAC;EACrD,IAAI4B,IAAI,IAAIA,IAAI,CAACT,EAAE,EAAE,OAAOnB,MAAM,CAAC4B,IAAI,CAAC;EACxC,OAAOA,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}